{"ast":null,"code":"var _jsxFileName = \"C:\\\\BlackBoardFrontEnd\\\\frontend\\\\pages\\\\article\\\\all.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Articles from \"../../components/articles\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Typing from \"react-typing-animation\";\nimport Zoom from \"react-reveal/Zoom\";\n\nconst AllArticals = ({\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage,\n  writers,\n  vidcat,\n  videos\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    categories: categories,\n    vidcat: vidcat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Seo, {\n    seo: homepage.seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"uk-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-container uk-container-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Zoom, {\n    left: true,\n    cascade: true,\n    duration: 550,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, homepage.hero.title)), __jsx(Articles, {\n    articles: articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers, vidcat, videos] = await Promise.all([fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/global\"), fetchAPI(\"/landing-page\"), fetchAPI(\"/writers\"), fetchAPI(\"/vid-catagories\"), fetchAPI(\"/videos\")]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      global,\n      landingpage,\n      writers,\n      vidcat,\n      videos\n    },\n    revalidate: 1\n  };\n}\nexport default AllArticals;","map":{"version":3,"sources":["C:/BlackBoardFrontEnd/frontend/pages/article/all.js"],"names":["React","Articles","Layout","Seo","fetchAPI","Typing","Zoom","AllArticals","articles","categories","homepage","global","landingpage","writers","vidcat","videos","seo","hero","title","getStaticProps","Promise","all","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,UAFmB;AAGnBC,EAAAA,QAHmB;AAInBC,EAAAA,MAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,OANmB;AAOnBC,EAAAA,MAPmB;AAQnBC,EAAAA;AARmB,CAAD,KASd;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEN,UAApB;AAAgC,IAAA,MAAM,EAAEK,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEJ,QAAQ,CAACM,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,OAAO,MAAlB;AAAmB,IAAA,QAAQ,EAAE,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBN,QAAQ,CAACO,IAAT,CAAcC,KAArC,CADF,CAFF,EAOE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEV,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAFF,CADF,CADF;AAmBD,CA7BD;;AA+BA,OAAO,eAAeW,cAAf,GAAgC;AACrC;AACA,QAAM,CACJX,QADI,EAEJC,UAFI,EAGJC,QAHI,EAIJC,MAJI,EAKJC,WALI,EAMJC,OANI,EAOJC,MAPI,EAQJC,MARI,IASF,MAAMK,OAAO,CAACC,GAAR,CAAY,CACpBjB,QAAQ,CAAC,4BAAD,CADY,EAEpBA,QAAQ,CAAC,aAAD,CAFY,EAGpBA,QAAQ,CAAC,WAAD,CAHY,EAIpBA,QAAQ,CAAC,SAAD,CAJY,EAKpBA,QAAQ,CAAC,eAAD,CALY,EAMpBA,QAAQ,CAAC,UAAD,CANY,EAOpBA,QAAQ,CAAC,iBAAD,CAPY,EAQpBA,QAAQ,CAAC,SAAD,CARY,CAAZ,CATV;AAmBA,SAAO;AACLkB,IAAAA,KAAK,EAAE;AACLd,MAAAA,QADK;AAELC,MAAAA,UAFK;AAGLC,MAAAA,QAHK;AAILC,MAAAA,MAJK;AAKLC,MAAAA,WALK;AAMLC,MAAAA,OANK;AAOLC,MAAAA,MAPK;AAQLC,MAAAA;AARK,KADF;AAWLQ,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD;AAED,eAAehB,WAAf","sourcesContent":["import React from \"react\";\nimport Articles from \"../../components/articles\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Typing from \"react-typing-animation\";\nimport Zoom from \"react-reveal/Zoom\";\n\nconst AllArticals = ({\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage,\n  writers,\n  vidcat,\n  videos,\n}) => {\n  return (\n    <div>\n      <Layout categories={categories} vidcat={vidcat}>\n        <Seo seo={homepage.seo} />\n        <div className=\"uk-section\">\n          <div className=\"uk-container uk-container-large\">\n            {/* <LandingPage></LandingPage> */}\n            <Zoom left cascade duration={550}>\n              <h1 className=\"Title\">{homepage.hero.title}</h1>\n            </Zoom>\n\n            {/* <Zoom left> */}\n            <Articles articles={articles} />\n            {/* </Zoom> */}\n          </div>\n        </div>\n      </Layout>\n    </div>\n  );\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [\n    articles,\n    categories,\n    homepage,\n    global,\n    landingpage,\n    writers,\n    vidcat,\n    videos,\n  ] = await Promise.all([\n    fetchAPI(\"/articles?status=published\"),\n    fetchAPI(\"/categories\"),\n    fetchAPI(\"/homepage\"),\n    fetchAPI(\"/global\"),\n    fetchAPI(\"/landing-page\"),\n    fetchAPI(\"/writers\"),\n    fetchAPI(\"/vid-catagories\"),\n    fetchAPI(\"/videos\"),\n  ]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      global,\n      landingpage,\n      writers,\n      vidcat,\n      videos,\n    },\n    revalidate: 1,\n  };\n}\n\nexport default AllArticals;\n"]},"metadata":{},"sourceType":"module"}