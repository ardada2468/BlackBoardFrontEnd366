{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ardad\\\\BlackBoard\\\\frontend\\\\pages\\\\video\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport { getStrapiMedia } from \"../../lib/media\";\n\nconst Video = ({\n  article,\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage,\n  writers,\n  vidcat,\n  videos,\n  video\n}) => {\n  const imageUrl = getStrapiMedia(video.VideoThumbnail);\n  const seo = {\n    metaTitle: video.title,\n    metaDescription: video.description,\n    shareImage: video.VideoThumbnail,\n    video: true\n  };\n  return __jsx(Layout, {\n    categories: categories,\n    vidcat: vidcat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    id: \"banner\",\n    className: \"uk-height-medium uk-flex uk-flex-center uk-flex-middle uk-background-cover uk-light uk-padding uk-margin articalimg\",\n    \"data-src\": imageUrl,\n    \"data-srcset\": imageUrl,\n    \"data-uk-img\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, video.Title), __jsx(\"div\", {\n    className: \"uk-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-container uk-container-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(ReactMarkdown, {\n    source: video.HTMLVideo,\n    escapeHtml: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), __jsx(\"hr\", {\n    className: \"uk-divider-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"uk-grid-small uk-flex-left writercard\",\n    \"data-uk-grid\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, video.writer.picture && __jsx(Image, {\n    image: video.writer.picture,\n    style: {\n      position: \"static\",\n      borderRadius: \"25%\",\n      height: \"auto\",\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"uk-width-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"uk-margin-remove-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Author:  \", video.writer.name), __jsx(\"p\", {\n    className: \"uk-text-meta uk-margin-remove-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, __jsx(Moment, {\n    format: \"MMM Do YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, video.published_at)))), __jsx(\"div\", {\n    className: \"uk-grid-small uk-flex-left writercard\",\n    \"data-uk-grid\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, video.editor.Photo && __jsx(Image, {\n    image: video.editor.Photo,\n    style: {\n      position: \"static\",\n      borderRadius: \"25%\",\n      height: \"auto\",\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"uk-width-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"uk-margin-remove-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Editor: \", video.editor.Name))))));\n};\n\nexport async function getStaticPaths() {\n  const videos = await fetchAPI(\"/videos\");\n  return {\n    paths: videos.map(video => ({\n      params: {\n        slug: video.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const videos = await fetchAPI(`/videos?slug=${params.slug}&status=published`);\n  const categories = await fetchAPI(\"/categories\");\n  const vidcat = await fetchAPI(\"/vid-catagories\");\n  return {\n    props: {\n      video: videos[0],\n      categories,\n      vidcat\n    },\n    revalidate: 1\n  };\n}\nexport default Video;","map":{"version":3,"sources":["C:/Users/ardad/BlackBoard/frontend/pages/video/[slug].js"],"names":["ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","getStrapiMedia","Video","article","articles","categories","homepage","global","landingpage","writers","vidcat","videos","video","imageUrl","VideoThumbnail","seo","metaTitle","title","metaDescription","description","shareImage","Title","HTMLVideo","writer","picture","position","borderRadius","height","width","name","published_at","editor","Photo","Name","getStaticPaths","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,UAApB;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA,MAA1C;AAAkDC,EAAAA,WAAlD;AAA+DC,EAAAA,OAA/D;AAAwEC,EAAAA,MAAxE;AAAgFC,EAAAA,MAAhF;AAAwFC,EAAAA;AAAxF,CAAD,KAAoG;AAChH,QAAMC,QAAQ,GAAGZ,cAAc,CAACW,KAAK,CAACE,cAAP,CAA/B;AACA,QAAMC,GAAG,GAAG;AACVC,IAAAA,SAAS,EAAEJ,KAAK,CAACK,KADP;AAEVC,IAAAA,eAAe,EAAEN,KAAK,CAACO,WAFb;AAGVC,IAAAA,UAAU,EAAER,KAAK,CAACE,cAHR;AAIVF,IAAAA,KAAK,EAAE;AAJG,GAAZ;AAOA,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEP,UAApB;AAAgC,IAAA,MAAM,EAAEK,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEK,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,SAAS,EAAC,qHAFZ;AAGE,gBAAUF,QAHZ;AAIE,mBAAaA,QAJf;AAKE,uBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAK,CAACS,KAA7B,CAZF,EAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAET,KAAK,CAACU,SAA7B;AAAwC,IAAA,UAAU,EAAE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAuD,oBAAa,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,MAAN,CAAaC,OAAb,IACC,MAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,KAAK,CAACW,MAAN,CAAaC,OADtB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,QADL;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,KAAK,EAAE;AAJF,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYhB,KAAK,CAACW,MAAN,CAAaM,IADzB,CADF,EAKE;AAAG,IAAA,SAAS,EAAC,mCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BjB,KAAK,CAACkB,YAApC,CADF,CALF,CAdF,CAHF,EA4BE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAuD,oBAAa,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,KAAK,CAACmB,MAAN,CAAaC,KAAb,IACC,MAAC,KAAD;AACE,IAAA,KAAK,EAAEpB,KAAK,CAACmB,MAAN,CAAaC,KADtB;AAEE,IAAA,KAAK,EAAE;AACLP,MAAAA,QAAQ,EAAE,QADL;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,KAAK,EAAE;AAJF,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACShB,KAAK,CAACmB,MAAN,CAAaE,IADtB,CADF,CAdF,CA5BF,CADF,CAbF,CADF;AAqED,CA9ED;;AAgFA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMvB,MAAM,GAAG,MAAMd,QAAQ,CAAC,SAAD,CAA7B;AAEA,SAAO;AACLsC,IAAAA,KAAK,EAAExB,MAAM,CAACyB,GAAP,CAAYxB,KAAD,KAAY;AAC5ByB,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE1B,KAAK,CAAC0B;AADN;AADoB,KAAZ,CAAX,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAM1B,MAAM,GAAG,MAAMd,QAAQ,CAC1B,gBAAewC,MAAM,CAACC,IAAK,mBADD,CAA7B;AAEA,QAAMjC,UAAU,GAAG,MAAMR,QAAQ,CAAC,aAAD,CAAjC;AACE,QAAMa,MAAM,GAAG,MAAMb,QAAQ,CAAC,iBAAD,CAA7B;AACF,SAAO;AACL4C,IAAAA,KAAK,EAAE;AAAE7B,MAAAA,KAAK,EAAED,MAAM,CAAE,CAAF,CAAf;AAAqBN,MAAAA,UAArB;AAAiCK,MAAAA;AAAjC,KADF;AAELgC,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID;AAED,eAAexC,KAAf","sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\nimport Moment from \"react-moment\";\r\nimport { fetchAPI } from \"../../lib/api\";\r\nimport Layout from \"../../components/layout\";\r\nimport Image from \"../../components/image\";\r\nimport Seo from \"../../components/seo\";\r\nimport { getStrapiMedia } from \"../../lib/media\";\r\n\r\n  \r\n\r\nconst Video = ({article, articles, categories, homepage, global, landingpage, writers, vidcat, videos, video}) => {\r\n  const imageUrl = getStrapiMedia(video.VideoThumbnail);\r\n  const seo = {\r\n    metaTitle: video.title,\r\n    metaDescription: video.description,\r\n    shareImage: video.VideoThumbnail,\r\n    video: true,\r\n  };\r\n\r\n  return (\r\n    <Layout categories={categories} vidcat={vidcat} >\r\n      <Seo seo={seo} />\r\n      <div\r\n        id=\"banner\"\r\n        className=\"uk-height-medium uk-flex uk-flex-center uk-flex-middle uk-background-cover uk-light uk-padding uk-margin articalimg\"\r\n        data-src={imageUrl}\r\n        data-srcset={imageUrl}\r\n        data-uk-img        \r\n      >\r\n        \r\n      </div>\r\n       {/* <Image className=\"img uk-light uk-padding uk-height-medium\" data-src={imageUrl}></Image> */}\r\n      <h2 className=\"Title\">{video.Title}</h2>\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container uk-container-small\">\r\n          <ReactMarkdown source={video.HTMLVideo} escapeHtml={false} />\r\n          <hr className=\"uk-divider-small\" />\r\n          <div className=\"uk-grid-small uk-flex-left writercard\" data-uk-grid=\"true\">\r\n            <div>\r\n              {video.writer.picture && (\r\n                <Image\r\n                  image={video.writer.picture}\r\n                  style={{\r\n                    position: \"static\",\r\n                    borderRadius: \"25%\",\r\n                    height: \"auto\",\r\n                    width: \"25%\"\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <p className=\"uk-margin-remove-bottom\">\r\n                Author:  {video.writer.name}\r\n            \r\n              </p>\r\n              <p className=\"uk-text-meta uk-margin-remove-top\">\r\n                <Moment format=\"MMM Do YYYY\">{video.published_at}</Moment>\r\n              </p>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"uk-grid-small uk-flex-left writercard\" data-uk-grid=\"true\">\r\n            <div>\r\n              {video.editor.Photo && (\r\n                <Image\r\n                  image={video.editor.Photo}\r\n                  style={{\r\n                    position: \"static\",\r\n                    borderRadius: \"25%\",\r\n                    height: \"auto\",\r\n                    width: \"25%\"\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"uk-width-expand\">\r\n              <p className=\"uk-margin-remove-bottom\">\r\n              Editor: {video.editor.Name}\r\n            \r\n              </p>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const videos = await fetchAPI(\"/videos\");\r\n\r\n  return {\r\n    paths: videos.map((video) => ({\r\n      params: {\r\n        slug: video.slug,\r\n      },\r\n    })),\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const videos = await fetchAPI(\r\n    `/videos?slug=${params.slug}&status=published`);\r\n  const categories = await fetchAPI(\"/categories\");\r\n    const vidcat = await fetchAPI(\"/vid-catagories\");\r\n  return {\r\n    props: { video: videos [0], categories, vidcat,},\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default Video;\r\n"]},"metadata":{},"sourceType":"module"}