{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ardad\\\\BlackBoard\\\\frontend\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Articles from \"../components/articles\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI } from \"../lib/api\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst Articals = ({\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage\n}) => {\n  let showLanding = true;\n\n  OnlyArticals: {\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, __jsx(Layout, {\n      categories: (showLanding, categories),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, __jsx(Seo, {\n      seo: homepage.seo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      className: \"uk-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"uk-container uk-container-large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, homepage.hero.title), __jsx(Articles, {\n      articles: articles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    })))));\n  }\n\n  if (showLanding) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"Landing!!!\");\n  } else if (!showLanding) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(Layout, {\n      categories: (showLanding, categories),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, __jsx(Seo, {\n      seo: homepage.seo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"uk-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"uk-container uk-container-large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, homepage.hero.title), __jsx(Articles, {\n      articles: articles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    })))));\n  }\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers] = await Promise.all([fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/global\"), fetchAPI(\"/landing-page\"), fetchAPI(\"/writers\")]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      global,\n      landingpage,\n      writers,\n      showLanding\n    },\n    revalidate: 1\n  };\n}\nexport default Articals;","map":{"version":3,"sources":["C:/Users/ardad/BlackBoard/frontend/pages/index.js"],"names":["React","Articles","Layout","Seo","fetchAPI","BrowserRouter","Route","Switch","Articals","articles","categories","homepage","global","landingpage","showLanding","OnlyArticals","seo","hero","title","getStaticProps","writers","Promise","all","props","revalidate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Articles from \"../components/articles\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI } from \"../lib/api\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nconst Articals = ({ articles, categories, homepage, global, landingpage }) => {\n\n  let showLanding = true;\n\n  OnlyArticals:{\n    <div>\n    <Layout categories={showLanding, categories}>\n      <Seo seo={homepage.seo} />\n        <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n        {/* <LandingPage></LandingPage> */}\n          <h1 className=\"Title\">{homepage.hero.title}</h1>\n          <Articles articles={articles} />\n        </div>\n      </div>\n    </Layout>\n  </div>\n  }\n\n  if(showLanding){\n    return (\n      <h1>Landing!!!</h1>\n    );\n  }else if(!showLanding){\n    return (\n\n      <div>\n      <Layout categories={showLanding, categories}>\n        <Seo seo={homepage.seo} />\n          <div className=\"uk-section\">\n          <div className=\"uk-container uk-container-large\">\n          {/* <LandingPage></LandingPage> */}\n            <h1 className=\"Title\">{homepage.hero.title}</h1>\n            <Articles articles={articles} />\n          </div>\n        </div>\n      </Layout>\n    </div>\n\n    );\n  }\n\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers] = await Promise.all([\n    fetchAPI(\"/articles?status=published\"),\n    fetchAPI(\"/categories\"),\n    fetchAPI(\"/homepage\"),\n    fetchAPI(\"/global\"),\n    fetchAPI(\"/landing-page\"),\n    fetchAPI(\"/writers\")\n  ]);\n\n  return {\n    props: { articles, categories, homepage, global, landingpage, writers, showLanding},\n    revalidate: 1,\n  };\n}\n\nexport default Articals;\n"]},"metadata":{},"sourceType":"module"}