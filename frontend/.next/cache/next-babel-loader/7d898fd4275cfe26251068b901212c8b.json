{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Articles from \"../components/articles\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI, getStrapiURL } from \"../lib/api\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Image from \"../components/image\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport Typist from 'react-typist';\nimport Example from \"../components/TextAffect\";\nimport TextLoop from \"react-text-loop\";\nimport { Wave } from 'react-animated-text';\nimport { Random } from 'react-animated-text';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Typing from 'react-typing-animation';\nimport Zoom from 'react-reveal/Zoom';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Articals = ({\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage,\n  writers,\n  vidcat,\n  videos,\n  purposes\n}) => {\n  const style = {\n    alignSelf: \"center\",\n    width: \"60%\",\n    margin: \"auto\",\n    display: \"block\"\n  };\n\n  function getClassName(i) {\n    if (i % 2 === 0) {\n      return \"SubjectsRight\";\n    } else return \"SubjectsLeft\";\n  }\n\n  let x = 0;\n\n  function filterArt(articals) {\n    let filterArt = [];\n\n    for (let i = 0; i < articals.length; i++) {\n      if (articals[i].content.includes(\"www.youtube.com\")) {\n        filterArt.push(articals[i]);\n      }\n    }\n\n    console.log(filterArt);\n  }\n\n  filterArt(articles);\n  return __jsx(\"div\", null, __jsx(Layout, {\n    categories: categories,\n    vidcat: vidcat\n  }, __jsx(\"div\", {\n    className: \"MasterContainer\"\n  }, __jsx(\"div\", {\n    className: \"LandingCardBody\"\n  }, __jsx(\"div\", {\n    className: \"LandingCardCard\"\n  }, __jsx(\"img\", {\n    src: landingpage.DisplayImage.formats.large.url,\n    alt: \"birthday\",\n    class: \"birthday\"\n  }), __jsx(\"div\", {\n    className: \"LandingCardText\"\n  }, __jsx(\"h1\", null, __jsx(Typing, {\n    speed: 75\n  }, landingpage.HeaderTitle)), __jsx(\"h2\", {\n    className: \"GetReadyTo\"\n  }, \"A place to       \", \" \", __jsx(\"br\", null), __jsx(TextLoop, {\n    interval: 1050,\n    mask: true\n  }, purposes.map((purpose, i) => {\n    return __jsx(\"h2\", {\n      className: \"flowingText\"\n    }, __jsx(\"em\", null, [\"  \" + purpose.Purpose]));\n  })))), __jsx(\"div\", {\n    className: \"LandingCardSpace\"\n  }))), __jsx(\"div\", {\n    className: \"MainSubjectContainer\"\n  }, __jsx(Zoom, {\n    left: true\n  }, __jsx(\"div\", {\n    className: \"SubjectTitle\"\n  }, __jsx(\"h1\", null, \"Subjects\"))), __jsx(Zoom, {\n    left: true\n  }, __jsx(\"div\", {\n    className: \"SubjectContainer\"\n  }, categories.map(catagory => {\n    x++;\n    return __jsx(\"div\", {\n      className: getClassName(x)\n    }, console.log(x + \" \" + getClassName(x)), __jsx(\"img\", {\n      src: catagory.Icon.formats.thumbnail.url\n    }), __jsx(\"h4\", null, catagory.name));\n  })))), __jsx(\"div\", {\n    className: \"OurPurpose\"\n  }, __jsx(\"div\", null, __jsx(Zoom, {\n    left: true\n  }, __jsx(\"div\", {\n    className: \"aboutUsCard\"\n  }, __jsx(\"h1\", {\n    className: \"Title\"\n  }, \"About Us\"), __jsx(\"p\", null, landingpage.OurPurpose))))))));\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers, vidcat, videos, purposes] = await Promise.all([fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/global\"), fetchAPI(\"/landing-page\"), fetchAPI(\"/writers\"), fetchAPI(\"/vid-catagories\"), fetchAPI(\"/videos\"), fetchAPI(\"/a-place-tos\")]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      global,\n      landingpage,\n      writers,\n      vidcat,\n      videos,\n      purposes\n    },\n    revalidate: 1\n  };\n}\nexport default Articals;","map":null,"metadata":{},"sourceType":"module"}