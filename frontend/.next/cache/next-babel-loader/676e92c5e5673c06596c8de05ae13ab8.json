{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ardad\\\\BlackBoard\\\\frontend\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Articles from \"../components/articles\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI, getStrapiURL } from \"../lib/api\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Image from \"../components/image\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport Typist from 'react-typist';\nimport Example from \"../components/TextAffect\";\nimport TextLoop from \"react-text-loop\";\nimport { Wave } from 'react-animated-text';\nimport { Random } from 'react-animated-text';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nconst Articals = ({\n  articles,\n  categories,\n  homepage,\n  global,\n  landingpage,\n  writers,\n  vidcat,\n  videos,\n  purposes\n}) => {\n  const style = {\n    alignSelf: \"center\",\n    width: \"60%\",\n    margin: \"auto\",\n    display: \"block\"\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    categories: categories,\n    vidcat: vidcat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }\n  }, __jsx(\"div\", {\n    className: \"LandingCardBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    class: \"LandingCardCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, landingpage.HeaderTitle), __jsx(\"img\", {\n    src: \"http://localhost:1337\" + landingpage.DisplayImage.formats.large.url,\n    alt: \"birthday\",\n    class: \"birthday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    class: \"LandingCardText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"GetReadyTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, \"A place to \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 44\n    }\n  }), __jsx(TextLoop, {\n    interval: 1050,\n    mask: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, purposes.map((purpose, i) => {\n    return __jsx(\"h2\", {\n      className: \"flowingText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 27\n      }\n    }, __jsx(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 55\n      }\n    }, [\"  \" + purpose.Purpose]));\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"I hope you have a wonderful birthday\"), __jsx(\"p\", {\n    class: \"LandingCardMuted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"- Jonah Lawrence\")), __jsx(\"div\", {\n    class: \"LandingCardSpace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  })))));\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers, vidcat, videos, purposes] = await Promise.all([fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/global\"), fetchAPI(\"/landing-page\"), fetchAPI(\"/writers\"), fetchAPI(\"/vid-catagories\"), fetchAPI(\"/videos\"), fetchAPI(\"/our-purposes\")]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      global,\n      landingpage,\n      writers,\n      vidcat,\n      videos,\n      purposes\n    },\n    revalidate: 1\n  };\n}\nexport default Articals;","map":{"version":3,"sources":["C:/Users/ardad/BlackBoard/frontend/pages/index.js"],"names":["React","Articles","Layout","Seo","fetchAPI","getStrapiURL","BrowserRouter","Route","Switch","Image","getStrapiMedia","Typist","Example","TextLoop","Wave","Random","ScrollAnimation","Articals","articles","categories","homepage","global","landingpage","writers","vidcat","videos","purposes","style","alignSelf","width","margin","display","HeaderTitle","DisplayImage","formats","large","url","map","purpose","i","Purpose","getStaticProps","Promise","all","props","revalidate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Articles from \"../components/articles\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI, getStrapiURL } from \"../lib/api\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Image from \"../components/image\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport Typist from 'react-typist';\nimport Example from \"../components/TextAffect\";\nimport TextLoop from \"react-text-loop\"\nimport { Wave } from 'react-animated-text';\nimport { Random } from 'react-animated-text';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nconst Articals = ({ articles, categories, homepage, global, landingpage, writers, vidcat, videos, purposes}) => {\n\nconst style={\n  alignSelf: \"center\",\n  width:\"60%\",\n  margin: \"auto\",\n  display: \"block\",\n  \n\n}\n\n  return (\n\n    <div>\n    {/* <Layout categories={categories}>\n      <Seo seo={homepage.seo} />\n        <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n          <h1 className=\"Title\">{homepage.hero.title}</h1>\n          <Articles articles={articles} />\n        </div>\n      </div>\n    </Layout> */}\n\n<Layout categories={categories} vidcat={vidcat}>\n\n    {/* <div className=\"Greeting\">\n\n      <a className=\"paddingSpace\"></a>\n        <h1 className=\"Title\">{landingpage.HeaderTitle}</h1>\n        <hr></hr>\n\n    </div>\n    <div className=\"ImmageHolder\">\n        <a className=\"paddingSpace\"></a>\n        <Image image={landingpage.DisplayImage} style={style}></Image>\n        <div className=\"APlaceTo\">\n          <a className=\"paddingSpace\"></a>\n            <h2 className=\"GetReadyTo\" >A place to <br></br>\n                <TextLoop interval={750} mask={true}> \n                  {purposes.map((purpose, i) => {\n                    return (\n                          <h2 className=\"flowingText\"><em>{[ \"  \" + purpose.Purpose]}</em></h2> \n                         \n                            );\n                   })} \n                </TextLoop>\n            </h2>\n        </div>\n\n        \n\n    </div>\n    <div>\n\n      \n\n      <h1>Our Purpose</h1>\n      \n\n    </div>\n\n\n    <div className=\"APlaceTo\"> \n        </div>\n\n    \n    */}\n\n\n\n\n    <div className=\"LandingCardBody\">\n      \n\n\n      <div class=\"LandingCardCard\">\n      <h1 className=\"\">{landingpage.HeaderTitle}</h1>\n\n    <img src={\"http://localhost:1337\"+landingpage.DisplayImage.formats.large.url} alt=\"birthday\" class=\"birthday\"/>\n    <div class=\"LandingCardText\">\n    <h2 className=\"GetReadyTo\" >A place to <br></br>\n                <TextLoop interval={1050} mask={true}> \n                  {purposes.map((purpose, i) => {\n                    return (\n                          <h2 className=\"flowingText\"><em>{[ \"  \" + purpose.Purpose]}</em></h2> \n                         \n                            );\n                   })} \n                </TextLoop>\n            </h2>\n      {/* <h1>Happy Birthday!</h1> */}\n      <p>I hope you have a wonderful birthday</p>\n      <p class=\"LandingCardMuted\">- Jonah Lawrence</p>\n    </div>\n    <div class=\"LandingCardSpace\"></div>\n    </div>\n</div>\n\n\n\n</Layout>\n\n\n  \n\n\n    \n    \n    \n  </div>\n  );\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, global, landingpage, writers, vidcat, videos, purposes] = await Promise.all([\n    fetchAPI(\"/articles?status=published\"),\n    fetchAPI(\"/categories\"),\n    fetchAPI(\"/homepage\"),\n    fetchAPI(\"/global\"),\n    fetchAPI(\"/landing-page\"),\n    fetchAPI(\"/writers\"),\n    fetchAPI(\"/vid-catagories\"),\n    fetchAPI(\"/videos\"),\n    fetchAPI(\"/our-purposes\"),\n\n  ]);\n  return {\n    props: {articles, categories, homepage, global, landingpage, writers, vidcat, videos, purposes},\n    revalidate: 1,\n  };\n\n}\n\nexport default Articals;\n"]},"metadata":{},"sourceType":"module"}