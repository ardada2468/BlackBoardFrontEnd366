{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ardad\\\\BlackBoard\\\\frontend\\\\components\\\\search.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport Seo from \"../components/seo\";\nimport { fetchAPI } from \"../lib/api\";\nimport getStaticProps from \"../p\"; // const data = ({ articles, categories, homepage }) => {\n// }\n// export async function getStaticProps() {\n//     // Run API calls in parallel\n//     const [articles, categories, homepage] = await Promise.all([\n//       fetchAPI(\"/articles?status=published\"),\n//       fetchAPI(\"/categories\"),\n//       fetchAPI(\"/homepage\"),\n//     ]);\n//     return {\n//       props: { articles, categories, homepage },\n//       revalidate: 1,\n//     };\n//   }\n//   const source = _.times(5, ({ articles, categories, homepage }) => ({\n//         title: articles.title,\n//         discription: articles.description,\n//         image: getStrapiMedia\n// }))\n\nvar initialState = {\n  loading: false,\n  results: [],\n  value: ''\n};\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CLEAN_QUERY':\n      return initialState;\n\n    case 'START_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        value: action.query\n      });\n\n    case 'FINISH_SEARCH':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        results: action.results\n      });\n\n    case 'UPDATE_SELECTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        value: action.selection\n      });\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction SearchExampleStandard() {\n  _s();\n\n  var _React$useReducer = React.useReducer(exampleReducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var loading = state.loading,\n      results = state.results,\n      value = state.value;\n  var timeoutRef = React.useRef();\n  var handleSearchChange = React.useCallback(function (e, data) {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = setTimeout(function () {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      var re = new RegExp(_.escapeRegExp(data.value), 'i');\n\n      var isMatch = function isMatch(result) {\n        return re.test(result.title);\n      };\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(Search, {\n    loading: loading,\n    onResultSelect: function onResultSelect(e, data) {\n      return dispatch({\n        type: 'UPDATE_SELECTION',\n        selection: data.result.title\n      });\n    },\n    onSearchChange: handleSearchChange,\n    results: results,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), __jsx(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"State\"), __jsx(\"pre\", {\n    style: {\n      overflowX: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, JSON.stringify({\n    loading: loading,\n    results: results,\n    value: value\n  }, null, 2)), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Options\"), __jsx(\"pre\", {\n    style: {\n      overflowX: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, JSON.stringify(source, null, 2)))));\n}\n\n_s(SearchExampleStandard, \"eyK34sYtN/wGlobeW5QOJcopodM=\");\n\n_c = SearchExampleStandard;\nexport default SearchExampleStandard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchExampleStandard\");","map":{"version":3,"sources":["C:/Users/ardad/BlackBoard/frontend/components/search.js"],"names":["_","React","Search","Grid","Header","Segment","Seo","fetchAPI","getStaticProps","initialState","loading","results","value","exampleReducer","state","action","type","query","selection","Error","SearchExampleStandard","useReducer","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","e","data","clearTimeout","current","setTimeout","length","re","RegExp","escapeRegExp","isMatch","result","test","title","filter","source","useEffect","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\nimport React from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport Seo from \"../components/seo\";\r\nimport { fetchAPI } from \"../lib/api\";\r\nimport getStaticProps from \"../p\"\r\n// const data = ({ articles, categories, homepage }) => {\r\n\r\n\r\n\r\n// }\r\n\r\n// export async function getStaticProps() {\r\n//     // Run API calls in parallel\r\n//     const [articles, categories, homepage] = await Promise.all([\r\n//       fetchAPI(\"/articles?status=published\"),\r\n//       fetchAPI(\"/categories\"),\r\n//       fetchAPI(\"/homepage\"),\r\n//     ]);\r\n  \r\n//     return {\r\n//       props: { articles, categories, homepage },\r\n//       revalidate: 1,\r\n//     };\r\n//   }\r\n\r\n//   const source = _.times(5, ({ articles, categories, homepage }) => ({\r\n//         title: articles.title,\r\n//         discription: articles.description,\r\n//         image: getStrapiMedia\r\n\r\n// }))\r\n\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  results: [],\r\n  value: '',\r\n}\r\n\r\nfunction exampleReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CLEAN_QUERY':\r\n      return initialState\r\n    case 'START_SEARCH':\r\n      return { ...state, loading: true, value: action.query }\r\n    case 'FINISH_SEARCH':\r\n      return { ...state, loading: false, results: action.results }\r\n    case 'UPDATE_SELECTION':\r\n      return { ...state, value: action.selection }\r\n\r\n    default:\r\n      throw new Error()\r\n  }\r\n}\r\n\r\nfunction SearchExampleStandard() {\r\n  const [state, dispatch] = React.useReducer(exampleReducer, initialState)\r\n  const { loading, results, value } = state\r\n\r\n  const timeoutRef = React.useRef()\r\n  const handleSearchChange = React.useCallback((e, data) => {\r\n    clearTimeout(timeoutRef.current)\r\n    dispatch({ type: 'START_SEARCH', query: data.value })\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      if (data.value.length === 0) {\r\n        dispatch({ type: 'CLEAN_QUERY' })\r\n        return\r\n      }\r\n\r\n      const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      dispatch({\r\n        type: 'FINISH_SEARCH',\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 300)\r\n  }, [])\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeoutRef.current)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={6}>\r\n        <Search\r\n          loading={loading}\r\n          onResultSelect={(e, data) =>\r\n            dispatch({ type: 'UPDATE_SELECTION', selection: data.result.title })\r\n          }\r\n          onSearchChange={handleSearchChange}\r\n          results={results}\r\n          value={value}\r\n        />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={10}>\r\n        <Segment>\r\n          <Header>State</Header>\r\n          <pre style={{ overflowX: 'auto' }}>\r\n            {JSON.stringify({ loading, results, value }, null, 2)}\r\n          </pre>\r\n          <Header>Options</Header>\r\n          <pre style={{ overflowX: 'auto' }}>\r\n            {JSON.stringify(source, null, 2)}\r\n          </pre>\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SearchExampleStandard\r\n"]},"metadata":{},"sourceType":"module"}