{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ardad\\\\BlackBoard\\\\frontend\\\\pages\\\\category\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Articles from \"../../components/articles\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\n\nconst Category = ({\n  catagory,\n  categories,\n  vidcat\n}) => {\n  const seo = {\n    metaTitle: category.name,\n    metaDescription: `All ${category.name} articles`\n  };\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"uk-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-container uk-container-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, category.name), __jsx(Articles, {\n    articles: category.articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport async function getStaticPaths() {\n  const categories = await fetchAPI(\"/categories\");\n  return {\n    paths: categories.map(category => ({\n      params: {\n        slug: category.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const category = (await fetchAPI(`/categories?slug=${params.slug}`))[0];\n  const categories = await fetchAPI(\"/categories\");\n  return {\n    props: {\n      category,\n      categories\n    },\n    revalidate: 1\n  };\n}\nexport default Category;","map":{"version":3,"sources":["C:/Users/ardad/BlackBoard/frontend/pages/category/[slug].js"],"names":["Articles","fetchAPI","Layout","Seo","Category","catagory","categories","vidcat","seo","metaTitle","category","name","metaDescription","articles","getStaticPaths","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AACpD,QAAMC,GAAG,GAAG;AACVC,IAAAA,SAAS,EAAEC,QAAQ,CAACC,IADV;AAEVC,IAAAA,eAAe,EAAG,OAAMF,QAAQ,CAACC,IAAK;AAF5B,GAAZ;AAKA,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEL,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBE,QAAQ,CAACC,IAAhC,CADF,EAEE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAED,QAAQ,CAACG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAFF,CADF;AAWD,CAjBD;;AAmBA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMR,UAAU,GAAG,MAAML,QAAQ,CAAC,aAAD,CAAjC;AAEA,SAAO;AACLc,IAAAA,KAAK,EAAET,UAAU,CAACU,GAAX,CAAgBN,QAAD,KAAe;AACnCO,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAER,QAAQ,CAACQ;AADT;AAD2B,KAAf,CAAf,CADF;AAMLC,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMP,QAAQ,GAAG,CAAC,MAAMT,QAAQ,CAAE,oBAAmBgB,MAAM,CAACC,IAAK,EAAjC,CAAf,EAAoD,CAApD,CAAjB;AACA,QAAMZ,UAAU,GAAG,MAAML,QAAQ,CAAC,aAAD,CAAjC;AAEA,SAAO;AACLoB,IAAAA,KAAK,EAAE;AAAEX,MAAAA,QAAF;AAAYJ,MAAAA;AAAZ,KADF;AAELgB,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID;AAED,eAAelB,QAAf","sourcesContent":["import Articles from \"../../components/articles\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\n\nconst Category = ({catagory, categories, vidcat }) => {\n  const seo = {\n    metaTitle: category.name,\n    metaDescription: `All ${category.name} articles`,\n  };\n\n  return (\n    <Layout categories={categories}>\n      <Seo seo={seo} />\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n          <h1 className=\"Title\">{category.name}</h1>\n          <Articles articles={category.articles} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const categories = await fetchAPI(\"/categories\");\n\n  return {\n    paths: categories.map((category) => ({\n      params: {\n        slug: category.slug,\n      },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const category = (await fetchAPI(`/categories?slug=${params.slug}`))[0];\n  const categories = await fetchAPI(\"/categories\");\n\n  return {\n    props: { category, categories },\n    revalidate: 1,\n  };\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}