"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = createConnectedRouter;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _reactRedux = require("react-redux");

var _ActionTypes = _interopRequireDefault(require("./ActionTypes"));

var _createBaseRouter = _interopRequireDefault(require("./createBaseRouter"));

function resolveMatch(match) {
  return {
    type: _ActionTypes.default.RESOLVE_MATCH,
    payload: match
  };
}

function createConnectedRouter(_ref) {
  let {
    getFound = ({
      found
    }) => found
  } = _ref,
      options = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["getFound"]);
  return (0, _reactRedux.connect)(state => {
    const {
      match,
      resolvedMatch
    } = getFound(state);
    return {
      match,
      resolvedMatch
    };
  }, {
    onResolveMatch: resolveMatch
  }, null, {
    // Don't block context propagation from above. The router should seldom
    // be unnecessarily rerendering anyway.
    pure: false,
    getDisplayName: () => 'ConnectedRouter'
  })((0, _createBaseRouter.default)(options));
}

module.exports = exports.default;