"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = createMatchEnhancer;

var _ActionTypes = _interopRequireDefault(require("farce/ActionTypes"));

var _redux = require("redux");

var _ActionTypes2 = _interopRequireDefault(require("./ActionTypes"));

function createMatchMiddleware(matcher) {
  return function matchMiddleware() {
    return next => action => {
      const {
        type,
        payload
      } = action;

      if (type !== _ActionTypes.default.UPDATE_LOCATION) {
        return next(action);
      }

      return next({
        type: _ActionTypes2.default.UPDATE_MATCH,
        payload: Object.assign({
          location: payload
        }, matcher.match(payload))
      });
    };
  };
}

function createMatchEnhancer(matcher, getFound = ({
  found
}) => found) {
  return function matchEnhancer(createStore) {
    return (...args) => {
      const middlewareEnhancer = (0, _redux.applyMiddleware)(createMatchMiddleware(matcher));
      const store = middlewareEnhancer(createStore)(...args);

      function replaceRouteConfig(routeConfig) {
        matcher.replaceRouteConfig(routeConfig);
        store.dispatch({
          type: _ActionTypes.default.UPDATE_LOCATION,
          payload: getFound(store.getState()).match.location
        });
      }

      return Object.assign({}, store, {
        found: {
          matcher,
          replaceRouteConfig
        }
      });
    };
  };
}

module.exports = exports.default;