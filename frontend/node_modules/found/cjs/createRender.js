"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = createRender;

var _react = _interopRequireDefault(require("react"));

var _reactStaticContainer = _interopRequireDefault(require("react-static-container"));

var _ElementsRenderer = _interopRequireDefault(require("./ElementsRenderer"));

// These are intentionally not renderLoading, renderFetched, and renderFailure
// from Relay, because these don't quite correspond to those conditions.
function createRender({
  renderPending,
  renderReady,
  renderError
}) {
  return function render(renderArgs) {
    const {
      error,
      elements
    } = renderArgs;
    let element;

    if (error) {
      element = renderError ? renderError(renderArgs) : null;
    } else if (!elements) {
      element = renderPending ? renderPending(renderArgs) : undefined;
    } else if (renderReady) {
      element = renderReady(renderArgs);
    } else {
      element = /*#__PURE__*/_react.default.createElement(_ElementsRenderer.default, {
        elements: elements
      });
    }

    const hasElement = element !== undefined;
    return /*#__PURE__*/_react.default.createElement(_reactStaticContainer.default, {
      shouldUpdate: hasElement
    }, hasElement ? element : null);
  };
}

module.exports = exports.default;