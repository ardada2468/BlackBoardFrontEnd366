import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import FarceActions from 'farce/Actions';
import React from 'react';
import { Provider } from 'react-redux';
import createConnectedRouter from './createConnectedRouter';
import createFarceStore from './createFarceStore';
export default function createFarceRouter(_ref) {
  let {
    store,
    historyProtocol,
    historyMiddlewares,
    historyOptions,
    routeConfig
  } = _ref,
      options = _objectWithoutPropertiesLoose(_ref, ["store", "historyProtocol", "historyMiddlewares", "historyOptions", "routeConfig"]);

  const ConnectedRouter = createConnectedRouter(options);

  class FarceRouter extends React.Component {
    constructor(props) {
      super(props);
      this.store = store || createFarceStore({
        historyProtocol,
        historyMiddlewares,
        historyOptions,
        routeConfig
      });
    }

    componentWillUnmount() {
      this.store.dispatch(FarceActions.dispose());
    }

    render() {
      return /*#__PURE__*/React.createElement(Provider, {
        store: this.store
      }, /*#__PURE__*/React.createElement(ConnectedRouter, this.props));
    }

  }

  return FarceRouter;
}