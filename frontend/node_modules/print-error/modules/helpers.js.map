{"version":3,"sources":["../source/helpers.js"],"names":["is_object","extend","merge","clone","convert_from_camel_case","tabulate","exists","what","object_constructor","constructor","object","objects","filter","x","length","to","from","last","pop","intermediary_result","apply","Object","keys","key","Array","isArray","concat","parameters","prototype","slice","call","arguments","unshift","map","test","lo_dashed_key","replace","match","group_1","toLowerCase","text","tabs","split","line","trim","i","join"],"mappings":"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","file":"helpers.js","sourcesContent":["// // if the variable is defined\r\nexport const exists = what => typeof what !== 'undefined'\r\n\r\n// used for JSON object type checking\r\nconst object_constructor = {}.constructor\r\n\r\n// detects a JSON object\r\nexport function is_object(object)\r\n{\r\n\treturn exists(object) && (object !== null) && object.constructor === object_constructor\r\n}\r\n\r\n// extends the first object with \r\n/* istanbul ignore next: some weird transpiled code, not testable */\r\nexport function extend(...objects)\r\n{\r\n\tobjects = objects.filter(x => exists(x))\r\n\r\n\tif (objects.length === 0)\r\n\t{\r\n\t\treturn\r\n\t}\r\n\t\r\n\tif (objects.length === 1)\r\n\t{\r\n\t\treturn objects[0]\r\n\t}\r\n\r\n\tconst to   = objects[0]\r\n\tconst from = objects[1]\r\n\r\n\tif (objects.length > 2)\r\n\t{\r\n\t\tconst last = objects.pop()\r\n\t\tconst intermediary_result = extend.apply(this, objects)\r\n\t\treturn extend(intermediary_result, last)\r\n\t}\r\n\r\n\tfor (let key of Object.keys(from))\r\n\t{\r\n\t\tif (is_object(from[key]))\r\n\t\t{\r\n\t\t\tif (!is_object(to[key]))\r\n\t\t\t{\r\n\t\t\t\tto[key] = {}\r\n\t\t\t}\r\n\r\n\t\t\textend(to[key], from[key])\r\n\t\t}\r\n\t\telse if (Array.isArray(from[key]))\r\n\t\t{\r\n\t\t\tif (!Array.isArray(to[key]))\r\n\t\t\t{\r\n\t\t\t\tto[key] = []\r\n\t\t\t}\r\n\r\n\t\t\tto[key] = to[key].concat(clone(from[key]))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tto[key] = from[key]\r\n\t\t}\r\n\t}\r\n\r\n\treturn to\r\n}\r\n\r\nexport function merge()\r\n{\r\n\tconst parameters = Array.prototype.slice.call(arguments, 0)\r\n\tparameters.unshift({})\r\n\treturn extend.apply(this, parameters)\r\n}\r\n\r\nexport function clone(object)\r\n{\r\n\tif (is_object(object))\r\n\t{\r\n\t\treturn merge({}, object)\r\n\t}\r\n\telse if (Array.isArray(object))\r\n\t{\r\n\t\treturn object.map(x => clone(x))\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn object\r\n\t}\r\n}\r\n\r\n// converts all camelCased keys of an object to lodash style\r\nexport function convert_from_camel_case(object)\r\n{\r\n\tfor (let key of Object.keys(object))\r\n\t{\r\n\t\tif (/[A-Z]/.test(key))\r\n\t\t{\r\n\t\t\tconst lo_dashed_key = key.replace(/([A-Z])/g, function(match, group_1)\r\n\t\t\t{\r\n\t\t\t\treturn '_' + group_1.toLowerCase()\r\n\t\t\t})\r\n\r\n\t\t\tif (!exists(object[lo_dashed_key]))\r\n\t\t\t{\r\n\t\t\t\tobject[lo_dashed_key] = object[key]\r\n\t\t\t\tdelete object[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn object\r\n}\r\n\r\nexport function tabulate(text, tabs)\r\n{\r\n\treturn text.split('\\n').map((line) =>\r\n\t{\r\n\t\tif (line.trim() === '') {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t\tif (tabs < 0)\r\n\t\t{\r\n\t\t\tlet i = -tabs\r\n\t\t\twhile (i > 0)\r\n\t\t\t{\r\n\t\t\t\tline = line.replace(/^\\t/, '')\r\n\t\t\t\ti--\r\n\t\t\t}\r\n\t\t\treturn line\r\n\t\t}\r\n\t\treturn Array(tabs + 1).join('\\t') + line\r\n\t})\r\n\t.join('\\n')\r\n}"]}