{"version":3,"sources":["../../source/static-site-generator/snapshot.js"],"names":["snapshotWebsite","options","snapshot","transformContent","content","reloadData","addReloadDataFlag","host","port","pages","outputPath","unshift","snapshotProgress","ProgressBar","complete","incomplete","width","total","length","snapshotPages","tick","fs","moveSync","path","join","removeSync","remove","page","snapshotPage","url","targetStatusCode","status","_url","Error","outputFileSync","headEndsAt","indexOf","slice"],"mappings":"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","sourcesContent":["import path from 'path'\r\nimport fs from 'fs-extra'\r\nimport ProgressBar from 'progress'\r\n\r\nimport download from './download'\r\n\r\n// Snapshots all pages (URLs).\r\nexport default async function snapshotWebsite(options) {\r\n\treturn snapshot({\r\n\t\t...options,\r\n\t\ttransformContent: (content) => {\r\n\t\t\tif (options.transformContent) {\r\n\t\t\t\tcontent = options.transformContent(content)\r\n\t\t\t}\r\n\t\t\tif (options.reloadData) {\r\n\t\t\t\tcontent = addReloadDataFlag(content)\r\n\t\t\t}\r\n\t\t\treturn content\r\n\t\t}\r\n\t})\r\n}\r\n\r\n// Snapshots all pages (URLs).\r\nexport async function snapshot({\r\n\thost,\r\n\tport,\r\n\tpages,\r\n\toutputPath,\r\n\ttransformContent\r\n}) {\r\n\t// Could be `null`, not just `undefined`.\r\n\tif (!pages) {\r\n\t\tpages = []\r\n\t}\r\n\r\n\t// Add the \"base\" page which is an empty page\r\n\t// which will be rendered in user's browser on client side.\r\n\t// This should be the \"fallback\" page.\r\n\tpages.unshift('/react-pages-base')\r\n\r\n\t// The progress meter for the website snapshotting process.\r\n\tconst snapshotProgress = new ProgressBar(' Snapshotting [:bar] :total :percent :etas', {\r\n\t\tcomplete: '=',\r\n\t\tincomplete: ' ',\r\n\t\twidth: 50,\r\n\t\ttotal: pages.length\r\n\t})\r\n\r\n\t// Start the website snapshotting process\r\n\tawait snapshotPages(\r\n\t\thost,\r\n\t\tport,\r\n\t\tpages,\r\n\t\toutputPath,\r\n\t\ttransformContent,\r\n\t\t() => snapshotProgress.tick()\r\n\t)\r\n\r\n\t// Move `./react-pages-base/index.html` to `./base.html`.\r\n\tfs.moveSync(path.join(outputPath, 'react-pages-base/index.html'), path.join(outputPath, 'base.html'))\r\n\tfs.removeSync(path.join(outputPath, 'react-pages-base'))\r\n}\r\n\r\nasync function snapshotPages(host, port, pages, outputPath, transformContent, tick) {\r\n\t// Clear the output folder\r\n\tawait fs.remove(outputPath)\r\n\t// Snapshot every page and put it into the output folder\r\n\tfor (const page of pages) {\r\n\t\tawait snapshotPage(host, port, page, outputPath, transformContent)\r\n\t\ttick()\r\n\t}\r\n}\r\n\r\nasync function snapshotPage(host, port, page, outputPath, transformContent) {\r\n\t\tlet url = page\r\n\t\tlet targetStatusCode = 200\r\n\r\n\t\tif (typeof page !== 'string' && page.status) {\r\n\t\t\turl = page.url\r\n\t\t\ttargetStatusCode = page.status\r\n\t\t}\r\n\r\n\t\tconst _url = `http://${host}:${port}${url}`\r\n\t\tconst { status, content } = await download(_url)\r\n\r\n\t\tif (status !== targetStatusCode) {\r\n\t\t\tthrow new Error(`Expected ${targetStatusCode} HTTP status code for \"${_url}\". Got ${status}.`);\r\n\t\t}\r\n\r\n\t\tfs.outputFileSync(path.join(outputPath, url, '/index.html'), transformContent ? transformContent(content) : content)\r\n}\r\n\r\nfunction addReloadDataFlag(content) {\r\n\tconst headEndsAt = content.indexOf('</head>')\r\n\tif (headEndsAt < 0) {\r\n\t\tthrow new Error('</head> not found')\r\n\t}\r\n\treturn content.slice(0, headEndsAt) +\r\n\t\t'<script> window._react_pages_reload_data = true </script>' +\r\n\t\tcontent.slice(headEndsAt)\r\n}"],"file":"snapshot.js"}