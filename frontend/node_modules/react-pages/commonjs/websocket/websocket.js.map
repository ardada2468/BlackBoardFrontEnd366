{"version":3,"sources":["../../source/websocket/websocket.js"],"names":["websocket","host","port","secure","store","autoDispatch","_websocket","RobustWebSocket","undefined","shouldReconnect","event","code","jitter","Math","min","pow","attempts","send","message","JSON","stringify","close","listen","event_name","listener","enhanced_listener","addEventListener","removeEventListener","onOpen","onClose","onError","onMessage","parse","data","socket","type","dispatch","window","value","amount","random"],"mappings":"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","sourcesContent":["import RobustWebSocket from '../../client/robust-websocket'\r\n\r\n// Sets up WebSocket connection.\r\nexport default function websocket({ host, port, secure, store, autoDispatch })\r\n{\r\n\tconst _websocket = new RobustWebSocket(`${secure ? 'wss' : 'ws'}://${host}:${port}`, undefined,\r\n\t{\r\n\t\t// If a number returned then it's gonna be a delay\r\n\t\t// before reconnect is attempted.\r\n\t\t// If anything else is returned (`null`, `undefined`, `false`)\r\n\t\t// then it means \"don't try to reconnect\".\r\n\t\t//\r\n\t\t// `event` is either a `CloseEvent`\r\n\t\t// or an online/offline `navigator` event.\r\n\t\t//\r\n\t\tshouldReconnect(event, websocket)\r\n\t\t{\r\n\t\t\t// https://github.com/appuri/robust-websocket/issues/8\r\n\t\t\t//\r\n\t\t\t// 1011 (500) is not retried by the default shouldReconnect.\r\n\t\t\t// a 500 will usually either be a big in the server\r\n\t\t\t// that the code is hitting, and retrying won't help,\r\n\t\t\t// or the server is down and getting slammed,\r\n\t\t\t// and retrying will just slam it more.\r\n\t\t\t// Sure the server will probably eventually come back up\r\n\t\t\t// so retrying it at a longer interval would be fine.\r\n\t\t\t//\r\n\t\t\t// 1008 (400) means the request you formed is bad.\r\n\t\t\t// If you try the exact same request again, you should always get 400.\r\n\t\t\t// 400 is not a transient error. If it is, the API is using the wrong status code.\r\n\t\t\t//\r\n\t\t\tif (event.code === 1008 || event.code === 1011)\r\n\t\t\t{\r\n\t\t\t\t// Retry in 30 minutes\r\n\t\t\t\treturn jitter(30 * 60 * 1000)\r\n\t\t\t}\r\n\r\n\t\t\t// Exponential backoff, but no less that once in a couple of minutes\r\n\t\t\treturn jitter(Math.min(Math.pow(1.5, websocket.attempts) * 500, 2 * 60 * 1000))\r\n\t\t}\r\n\t})\r\n\r\n\tconst websocket =\r\n\t{\r\n\t\tsend(message)\r\n\t\t{\r\n\t\t\treturn _websocket.send(JSON.stringify(message))\r\n\t\t},\r\n\r\n\t\tclose()\r\n\t\t{\r\n\t\t\treturn _websocket.close()\r\n\t\t},\r\n\r\n\t\tlisten(event_name, listener)\r\n\t\t{\r\n\t\t\tconst enhanced_listener = (event) => listener(event, store)\r\n\r\n\t\t\t_websocket.addEventListener(event_name, enhanced_listener)\r\n\r\n\t\t\t// Returns `unlisten()`\r\n\t\t\treturn () => _websocket.removeEventListener(event_name, enhanced_listener)\r\n\t\t},\r\n\r\n\t\tonOpen(listener)\r\n\t\t{\r\n\t\t\treturn websocket.listen('open', listener)\r\n\t\t},\r\n\r\n\t\tonClose(listener)\r\n\t\t{\r\n\t\t\treturn websocket.listen('close', listener)\r\n\t\t},\r\n\r\n\t\tonError(listener)\r\n\t\t{\r\n\t\t\treturn websocket.listen('error', listener)\r\n\t\t},\r\n\r\n\t\tonMessage(listener)\r\n\t\t{\r\n\t\t\treturn websocket.listen('message', (event, store) =>\r\n\t\t\t{\r\n\t\t\t\treturn listener(JSON.parse(event.data), store)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t// For advanced use cases\r\n\t\tsocket : _websocket\r\n\t}\r\n\r\n\tif (autoDispatch !== false)\r\n\t{\r\n\t\twebsocket.onMessage((message, store) =>\r\n\t\t{\r\n\t\t\tif (message.type)\r\n\t\t\t{\r\n\t\t\t\tstore.dispatch(message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\treturn window.websocket = websocket\r\n}\r\n\r\n// Returns a value ranging from [value * (1 - amount)] to (value * (1 + amount))\r\nfunction jitter(value, amount = 0.2)\r\n{\r\n\treturn value * ((1 - amount) + amount * 2 * Math.random())\r\n}"],"file":"websocket.js"}