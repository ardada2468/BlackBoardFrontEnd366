"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FadeInOut =
/*#__PURE__*/
function (_React$Component) {
  _inherits(FadeInOut, _React$Component);

  function FadeInOut() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, FadeInOut);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FadeInOut)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: _this.props.show
    });

    _defineProperty(_assertThisInitialized(_this), "hide", function () {
      var fadeOutDuration = _this.props.fadeOutDuration;
      clearTimeout(_this.showTimer);

      if (!_this._isMounted) {
        return;
      }

      _this.setState({
        show: false,
        fadeIn: false,
        fadeOut: true
      }); // Gives some time to CSS opacity transition to finish.


      _this.hideTimer = setTimeout(function () {
        if (_this._isMounted) {
          _this.setState({
            fadeOut: false
          });
        }
      }, fadeOutDuration);
    });

    return _this;
  }

  _createClass(FadeInOut, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (!prevProps.show && this.props.show) {
        this.show();
      } else if (prevProps.show && !this.props.show) {
        this.hide();
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._isMounted = false;
      clearTimeout(this.showTimer);
      clearTimeout(this.hideTimer);
    }
  }, {
    key: "show",
    value: function show() {
      var _this2 = this;

      clearTimeout(this.showTimer);
      clearTimeout(this.hideTimer);
      this.setState({
        show: true,
        fadeIn: false,
        fadeOut: false
      });
      this.showTimer = setTimeout(function () {
        if (_this2._isMounted) {
          _this2.setState({
            fadeIn: true
          });
        }
      }, // Adding a non-null delay in order to
      // prevent web browser from optimizing
      // adding CSS classes and doing it simultaneously
      // rather than sequentially (required for CSS transition).
      10);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          fadeInClassName = _this$props.fadeInClassName,
          hiddenClassName = _this$props.hiddenClassName,
          children = _this$props.children;
      var _this$state = this.state,
          show = _this$state.show,
          fadeIn = _this$state.fadeIn,
          fadeOut = _this$state.fadeOut;

      if (show || fadeOut) {
        if (fadeInClassName) {
          return _react["default"].cloneElement(children, {
            className: (0, _classnames["default"])(children.props.className, _defineProperty({}, fadeInClassName, fadeIn))
          });
        }

        return children;
      }

      if (hiddenClassName) {
        return _react["default"].cloneElement(children, {
          className: (0, _classnames["default"])(children.props.className, hiddenClassName)
        });
      }

      return null;
    }
  }]);

  return FadeInOut;
}(_react["default"].Component);

exports["default"] = FadeInOut;

_defineProperty(FadeInOut, "propTypes", {
  show: _propTypes["default"].bool.isRequired,
  hiddenClassName: _propTypes["default"].string,
  fadeOutDuration: _propTypes["default"].number.isRequired,
  fadeInClassName: _propTypes["default"].string,
  children: _propTypes["default"].node.isRequired
});

_defineProperty(FadeInOut, "defaultProps", {
  show: false
});
//# sourceMappingURL=FadeInOut.js.map