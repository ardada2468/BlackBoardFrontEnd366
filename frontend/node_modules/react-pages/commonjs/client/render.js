"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = render;

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _flags = require("./flags");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function render(_ref) {
  var render = _ref.render,
      _ref$renderParameters = _ref.renderParameters,
      renderParameters = _ref$renderParameters === void 0 ? {} : _ref$renderParameters,
      container = _ref.container;
  var firstRender = true; // Renders current React page (inside a container).
  // Returns a Promise for an object holding
  // `render` function for development mode hot reload,
  // and also `store` (if Redux is used).

  function renderPage() {
    if (firstRender) {
      firstRender = false;
    } else {
      window._react_pages_hot_reload = true;
    }

    return render(renderParameters).then(function (_ref2) {
      var element = _ref2.element,
          containerProps = _ref2.containerProps,
          rest = _objectWithoutProperties(_ref2, ["element", "containerProps"]);

      // if (locale) {
      // 	containerProps.locale = locale
      // }
      renderReactElementTree( // Render page `element` inside a container element.
      // E.g. Redux context `<Provider/>`, and others.
      _react["default"].createElement(container, containerProps, element), // DOM element to which React markup will be rendered
      getReactContainerElement());
      window._react_pages_hot_reload = false;
      return rest;
    });
  } // Render the page on the client side.


  return renderPage().then(function (result) {
    return _objectSpread({}, result, {
      // Client side code can then rerender the page any time
      // by calling this `render()` function
      // (makes hot reload work in development mode).
      rerender: renderPage
    });
  });
} // Renders React element to a DOM node


function renderReactElementTree(element, to) {
  // If using React >= 16 and the content is Server-Side Rendered.
  if ((0, _flags.isServerSidePreloaded)() && (0, _flags.isServerSideRendered)() && _reactDom["default"].hydrate) {
    // New API introduced in React 16
    // for "hydrating" Server-Side Rendered markup.
    // https://reactjs.org/docs/react-dom.html#hydrate
    return _reactDom["default"].hydrate(element, to);
  } // Clears `element` to prevent React warning:
  // "Calling ReactDOM.render() to hydrate server-rendered markup
  //  will stop working in React v17. Replace the ReactDOM.render() call
  //  with ReactDOM.hydrate() if you want React to attach to the server HTML."


  if (!window._react_pages_hot_reload) {
    while (to.firstChild) {
      to.removeChild(to.firstChild);
    }
  }

  return _reactDom["default"].render(element, to);
} // Retrieves a variable from `window` erasing it.


function getGlobalVariable(name) {
  var variable = window[name];

  if (variable !== undefined) {
    delete window[name];
  }

  return variable;
}

function getReactContainerElement() {
  var element = document.getElementById('react');

  if (!element) {
    var body = document.body;

    if (!body) {
      throw new Error('<body/> tag not found, make sure this script is added to the end of <body/> rather than inside <head/>.');
    }

    element = document.createElement('div');
    element.setAttribute('id', 'react');
    body.appendChild(element);
  }

  return element;
}
//# sourceMappingURL=render.js.map