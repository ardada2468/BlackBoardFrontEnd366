"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRouterStoreEnhancers = createRouterStoreEnhancers;
exports.matchRoutes = matchRoutes;
exports.getRoutesByPath = getRoutesByPath;
exports.getMatchedRoutes = getMatchedRoutes;
exports.getMatchedRoutesIndices = getMatchedRoutesIndices;
exports.getMatchedRoutesParams = getMatchedRoutesParams;
exports.getCurrentlyMatchedLocation = getCurrentlyMatchedLocation;
exports.getRouteParams = getRouteParams;
exports.getPreviouslyMatchedLocation = getPreviouslyMatchedLocation;
exports.getRoutePath = getRoutePath;
exports.convertRoutes = convertRoutes;
exports.initializeRouter = initializeRouter;
exports.goBack = goBack;
exports.goForward = goForward;
exports.pushLocation = pushLocation;
exports.replaceLocation = replaceLocation;
Object.defineProperty(exports, "foundReducer", {
  enumerable: true,
  get: function get() {
    return _foundReducer["default"];
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function get() {
    return _Route["default"];
  }
});
Object.defineProperty(exports, "Redirect", {
  enumerable: true,
  get: function get() {
    return _Redirect["default"];
  }
});
Object.defineProperty(exports, "useRouter", {
  enumerable: true,
  get: function get() {
    return _useRouter["default"];
  }
});
Object.defineProperty(exports, "RedirectException", {
  enumerable: true,
  get: function get() {
    return _RedirectException["default"];
  }
});
exports._RESOLVE_MATCH = exports.RESOLVE_MATCH = exports.UPDATE_MATCH = exports.GOTO_ACTION_TYPE = exports.REDIRECT_ACTION_TYPE = exports["goto"] = exports.redirect = void 0;

var _foundReducer = _interopRequireDefault(require("found/foundReducer"));

var _Route = _interopRequireDefault(require("found/Route"));

var _Redirect = _interopRequireDefault(require("found/Redirect"));

var _useRouter = _interopRequireDefault(require("found/useRouter"));

var _RedirectException = _interopRequireDefault(require("found/RedirectException"));

var _createMatchEnhancer = _interopRequireDefault(require("found/createMatchEnhancer"));

var _Matcher = _interopRequireDefault(require("found/Matcher"));

var _makeRouteConfig = _interopRequireDefault(require("found/makeRouteConfig"));

var _getStoreRenderArgs = _interopRequireDefault(require("found/getStoreRenderArgs"));

var _HttpError = _interopRequireDefault(require("found/HttpError"));

var _resolver = _interopRequireDefault(require("found/resolver"));

var _ActionTypes = _interopRequireDefault(require("found/ActionTypes"));

var _Actions = _interopRequireDefault(require("farce/Actions"));

var _ActionTypes2 = _interopRequireDefault(require("farce/ActionTypes"));

var _createHistoryEnhancer = _interopRequireDefault(require("farce/createHistoryEnhancer"));

var _createBasenameMiddleware = _interopRequireDefault(require("farce/createBasenameMiddleware"));

var _queryMiddleware = _interopRequireDefault(require("farce/queryMiddleware"));

var _instantNavigation = require("../redux/client/instantNavigation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function createRouterStoreEnhancers(routes, createHistoryProtocol) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var middlewares = [_queryMiddleware["default"]];

  if (options.basename) {
    middlewares.push((0, _createBasenameMiddleware["default"])({
      basename: options.basename
    }));
  }

  return [(0, _createHistoryEnhancer["default"])({
    protocol: createHistoryProtocol(),
    middlewares: middlewares
  }), (0, _createMatchEnhancer["default"])( // new Matcher(hotRouteConfig(routes))
  new _Matcher["default"](routes))];
}

function matchRoutes(store) {
  return (0, _getStoreRenderArgs["default"])({
    store: store,
    resolver: _resolver["default"],
    matchContext: {
      dispatch: store.dispatch,
      getState: store.getState
    }
  }).then(function (renderArgs) {
    if (renderArgs.error) {
      throw renderArgs.error;
    }

    return renderArgs;
  });
}

function getRoutesByPath(routeIndices, routes) {
  var matchedRoutes = [];

  for (var _iterator = routeIndices, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var i = _ref;
    matchedRoutes.push(routes[i]);
    routes = routes[i].children;
  }

  return matchedRoutes;
}

function getMatchedRoutes(state, routes) {
  return getRoutesByPath(state.found.match.routeIndices, routes);
}

function getMatchedRoutesIndices(state) {
  return state.found.match.routeIndices;
}

function getMatchedRoutesParams(state) {
  return state.found.match.routeParams;
}

function getCurrentlyMatchedLocation(state) {
  return state.found.match.location;
}

function getRouteParams(state) {
  return state.found.match.params;
}

function getPreviouslyMatchedLocation(state) {
  return state.found.resolvedMatch && // state.found.resolvedMatch.location.key === undefined &&
  state.found.resolvedMatch.location;
} // Returns a complete route path for matched routes chain.
// E.g. returns "/user/:user_id/post/:post_id"
// for matched URL "/user/1/post/123?key=value".


function getRoutePath(routes) {
  return routes // Select routes having `path` React property set.
  .filter(function (route) {
    return route.path;
  }) // Trim leading and trailing slashes (`/`)
  // from each route `path` React property.
  .map(function (route) {
    return route.path.replace(/^\//, '').replace(/\/$/, '');
  }) // Join route `path`s with slashes (`/`).
  .join('/') || '/';
}

function convertRoutes(routes) {
  return (0, _makeRouteConfig["default"])(routes);
}

function initializeRouter(store) {
  store.dispatch(_Actions["default"].init());
}

var redirect = _Actions["default"].replace;
exports.redirect = redirect;

var _goto = function _goto(location) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  (0, _instantNavigation.markImmediateNavigationAsInstantBack)(options.instantBack);
  return _Actions["default"].push(location);
};

exports["goto"] = _goto;
var REDIRECT_ACTION_TYPE = _ActionTypes2["default"].REPLACE;
exports.REDIRECT_ACTION_TYPE = REDIRECT_ACTION_TYPE;
var GOTO_ACTION_TYPE = _ActionTypes2["default"].PUSH;
exports.GOTO_ACTION_TYPE = GOTO_ACTION_TYPE;

function goBack() {
  return _Actions["default"].go(-1);
}

function goForward() {
  return _Actions["default"].go(1);
}

function pushLocation(location, options) {
  window._react_pages_skip_preload_update_location = true;
  return _goto(location, options);
}

function replaceLocation(location) {
  window._react_pages_skip_preload_update_location = true;
  return redirect(location);
}

var UPDATE_MATCH = _ActionTypes["default"].UPDATE_MATCH;
exports.UPDATE_MATCH = UPDATE_MATCH;
var RESOLVE_MATCH = _ActionTypes["default"].RESOLVE_MATCH;
exports.RESOLVE_MATCH = RESOLVE_MATCH;
var _RESOLVE_MATCH = '@@react-pages/RESOLVE_MATCH';
exports._RESOLVE_MATCH = _RESOLVE_MATCH;
//# sourceMappingURL=index.js.map