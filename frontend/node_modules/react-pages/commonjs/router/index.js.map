{"version":3,"sources":["../../source/router/index.js"],"names":["createRouterStoreEnhancers","routes","createHistoryProtocol","options","middlewares","queryMiddleware","basename","push","protocol","Matcher","matchRoutes","store","resolver","matchContext","dispatch","getState","then","renderArgs","error","getRoutesByPath","routeIndices","matchedRoutes","i","children","getMatchedRoutes","state","found","match","getMatchedRoutesIndices","getMatchedRoutesParams","routeParams","getCurrentlyMatchedLocation","location","getRouteParams","params","getPreviouslyMatchedLocation","resolvedMatch","getRoutePath","filter","route","path","map","replace","join","convertRoutes","initializeRouter","Actions","init","redirect","goto","instantBack","REDIRECT_ACTION_TYPE","ActionTypes","REPLACE","GOTO_ACTION_TYPE","PUSH","goBack","go","goForward","pushLocation","window","_react_pages_skip_preload_update_location","replaceLocation","UPDATE_MATCH","FoundActionTypes","RESOLVE_MATCH","_RESOLVE_MATCH"],"mappings":"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","sourcesContent":["export { default as foundReducer } from 'found/foundReducer'\r\nexport { default as Route } from 'found/Route'\r\nexport { default as Redirect } from 'found/Redirect'\r\nexport { default as useRouter } from 'found/useRouter'\r\nexport { default as RedirectException } from 'found/RedirectException'\r\n\r\nimport createMatchEnhancer from 'found/createMatchEnhancer'\r\nimport Matcher from 'found/Matcher'\r\nimport makeRouteConfig from 'found/makeRouteConfig'\r\nimport getStoreRenderArgs from 'found/getStoreRenderArgs'\r\nimport HttpError from 'found/HttpError'\r\nimport resolver from 'found/resolver'\r\nimport FoundActionTypes from 'found/ActionTypes'\r\n\r\nimport Actions from 'farce/Actions'\r\nimport ActionTypes from 'farce/ActionTypes'\r\nimport createHistoryEnhancer from 'farce/createHistoryEnhancer'\r\nimport createBasenameMiddleware from 'farce/createBasenameMiddleware'\r\nimport queryMiddleware from 'farce/queryMiddleware'\r\n\r\nimport { markImmediateNavigationAsInstantBack } from '../redux/client/instantNavigation'\r\n\r\nexport function createRouterStoreEnhancers(routes, createHistoryProtocol, options = {}) {\r\n\tconst middlewares = [\r\n\t\tqueryMiddleware\r\n\t]\r\n\tif (options.basename) {\r\n\t\tmiddlewares.push(createBasenameMiddleware({\r\n\t\t\tbasename: options.basename\r\n\t\t}))\r\n\t}\r\n\treturn [\r\n\t\tcreateHistoryEnhancer({\r\n\t\t\tprotocol: createHistoryProtocol(),\r\n\t\t\tmiddlewares\r\n\t\t}),\r\n\t\tcreateMatchEnhancer(\r\n\t\t\t// new Matcher(hotRouteConfig(routes))\r\n\t\t\tnew Matcher(routes)\r\n\t\t)\r\n\t]\r\n}\r\n\r\nexport function matchRoutes(store) {\r\n\treturn getStoreRenderArgs({\r\n\t\tstore,\r\n\t\tresolver,\r\n\t\tmatchContext: {\r\n\t\t\tdispatch: store.dispatch,\r\n\t\t\tgetState: store.getState\r\n\t\t}\r\n\t})\r\n\t.then((renderArgs) => {\r\n\t\tif (renderArgs.error) {\r\n\t\t\tthrow renderArgs.error\r\n\t\t}\r\n\t\treturn renderArgs\r\n\t})\r\n}\r\n\r\nexport function getRoutesByPath(routeIndices, routes) {\r\n\tconst matchedRoutes = []\r\n\tfor (const i of routeIndices) {\r\n\t\tmatchedRoutes.push(routes[i])\r\n\t\troutes = routes[i].children\r\n\t}\r\n\treturn matchedRoutes\r\n}\r\n\r\nexport function getMatchedRoutes(state, routes) {\r\n\treturn getRoutesByPath(state.found.match.routeIndices, routes)\r\n}\r\n\r\nexport function getMatchedRoutesIndices(state) {\r\n\treturn state.found.match.routeIndices\r\n}\r\n\r\nexport function getMatchedRoutesParams(state) {\r\n\treturn state.found.match.routeParams\r\n}\r\n\r\nexport function getCurrentlyMatchedLocation(state) {\r\n\treturn state.found.match.location\r\n}\r\n\r\nexport function getRouteParams(state) {\r\n\treturn state.found.match.params\r\n}\r\n\r\nexport function getPreviouslyMatchedLocation(state) {\r\n\treturn state.found.resolvedMatch &&\r\n\t\t// state.found.resolvedMatch.location.key === undefined &&\r\n\t\tstate.found.resolvedMatch.location\r\n}\r\n\r\n// Returns a complete route path for matched routes chain.\r\n// E.g. returns \"/user/:user_id/post/:post_id\"\r\n// for matched URL \"/user/1/post/123?key=value\".\r\nexport function getRoutePath(routes)\r\n{\r\n\treturn routes\r\n\t\t// Select routes having `path` React property set.\r\n\t\t.filter(route => route.path)\r\n\t\t// Trim leading and trailing slashes (`/`)\r\n\t\t// from each route `path` React property.\r\n\t\t.map(route => route.path.replace(/^\\//, '').replace(/\\/$/, ''))\r\n\t\t// Join route `path`s with slashes (`/`).\r\n\t\t.join('/') || '/'\r\n}\r\n\r\nexport function convertRoutes(routes) {\r\n\treturn makeRouteConfig(routes)\r\n}\r\n\r\nexport function initializeRouter(store) {\r\n\tstore.dispatch(Actions.init())\r\n}\r\n\r\nexport const redirect = Actions.replace\r\n\r\nexport const goto = (location, options = {}) => {\r\n\tmarkImmediateNavigationAsInstantBack(options.instantBack)\r\n\treturn Actions.push(location)\r\n}\r\n\r\nexport const REDIRECT_ACTION_TYPE = ActionTypes.REPLACE\r\nexport const GOTO_ACTION_TYPE = ActionTypes.PUSH\r\n\r\nexport function goBack() {\r\n\treturn Actions.go(-1)\r\n}\r\n\r\nexport function goForward() {\r\n\treturn Actions.go(1)\r\n}\r\n\r\nexport function pushLocation(location, options) {\r\n\twindow._react_pages_skip_preload_update_location = true\r\n\treturn goto(location, options)\r\n}\r\n\r\nexport function replaceLocation(location) {\r\n\twindow._react_pages_skip_preload_update_location = true\r\n\treturn redirect(location)\r\n}\r\n\r\nexport const UPDATE_MATCH = FoundActionTypes.UPDATE_MATCH\r\nexport const RESOLVE_MATCH = FoundActionTypes.RESOLVE_MATCH\r\n\r\nexport const _RESOLVE_MATCH = '@@react-pages/RESOLVE_MATCH'"],"file":"index.js"}