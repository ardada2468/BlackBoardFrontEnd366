{"version":3,"sources":["../../../source/redux/client/instantNavigation.js"],"names":["instantNavigationChain","instantNavigationChainIndex","addInstantBack","nextLocation","previousLocation","nextLocationRouteComponents","previousLocationRouteComponents","chain","length","previousLocationIndex","indexOfByKey","getLocationKey","slice","key","routes","sameRoutesIndex","findSameRoutesLocationIndex","push","isInstantTransition","fromLocation","toLocation","resetInstantNavigationChain","updateInstantNavigationChainIndex","location","i","console","error","j","wasInstantNavigation","window","_react_pages_was_instant_navigation","isInstantBackAbleNavigation","_react_pages_is_instant_back_able_navigation","setInstantNavigationFlag","value","markImmediateNavigationAsInstantBack","instantBack","_react_pages_instant_back_navigation","setTimeout","canGoBackInstantly","canGoForwardInstantly"],"mappings":"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","sourcesContent":["let instantNavigationChain = []\r\nlet instantNavigationChainIndex = -1\r\n\r\n/**\r\n * Is called when a `<Link/>` with `instantBack` property set is clicked.\r\n *\r\n * Stores \"current\" (soon to be \"previous\") location in \"instant back chain\",\r\n * so that if \"Back\" is clicked later then the transition to this\r\n * \"current\" (soon to be \"previous\") location is marked as \"should be instant\".\r\n *\r\n * \"Instant back chain\" consists of locations stored as a consequitive chain\r\n * and theoretically there can be more than one consequtive \"instant back\"-able\r\n * navigation in it (e.g. page1 -> page2 -> page3 -> \"Back\" -> page2 -> \"Back\" -> page3)\r\n * though I wouldn't advice doing that and would keep it minimal (a chain of two locations).\r\n *\r\n * Once a regular navigation is performed (i.e. not \"instant one\")\r\n * then the whole \"instant back chain\" is discarded.\r\n * E.g. a user clicks on `<Link instantBack/>` and is taken to a page\r\n * where he clicks on another `<Link/>` now without `instantBack` -\r\n * in this case all \"instant back\" history is discarded\r\n * and if the user clicks \"Back\" two times the second time won't be \"instant\".\r\n */\r\nexport function addInstantBack(\r\n\tnextLocation,\r\n\tpreviousLocation,\r\n\tnextLocationRouteComponents,\r\n\tpreviousLocationRouteComponents\r\n)\r\n{\r\n\tlet chain = instantNavigationChain\r\n\r\n\t// If there is already an \"instant\" transition in the chain\r\n\t// then insert this transition into the chain\r\n\t// only if it's \"page1 -> page2\" and \"page2 -> page3\"\r\n\t// so that the chain becomes \"page1 -> page2 -> page3\".\r\n\t// Otherwise, the already existing \"instant back\" chain is reset.\r\n\tif (chain.length > 0)\r\n\t{\r\n\t\tconst previousLocationIndex = indexOfByKey(chain, getLocationKey(previousLocation))\r\n\r\n\t\tif (previousLocationIndex >= 0)\r\n\t\t{\r\n\t\t\t// If transitioning from \"page2\" to \"page3\"\r\n\t\t\t// and the existing chain is \"page1 -> page2 -> page4\"\r\n\t\t\t// then trim the chain up to the \"current\" page\r\n\t\t\t// so that it becomes \"page1 -> page2\" (eligible for merging).\r\n\t\t\tchain = chain.slice(0, previousLocationIndex + 1)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// console.error('[react-pages] Error: previous location not found in an already existing instant back navigation chain', getLocationKey(previousLocation), chain)\r\n\t\t\t// Anomaly detected.\r\n\t\t\t// Reset the chain.\r\n\t\t\t// return resetInstantNavigationChain()\r\n\r\n\t\t\t// Basic recovery for cases where `history.replaceState()`\r\n\t\t\t// or `replaceHistory()` were called.\r\n\t\t\t// (e.g. Algolia \"Instant Search\" widget filters reconfigured)\r\n\t\t\tchain = []\r\n\t\t}\r\n\t}\r\n\r\n\tif (chain.length === 0)\r\n\t{\r\n\t\t// Add the \"current\" page to the chain.\r\n\t\tchain =\r\n\t\t[{\r\n\t\t\tkey : getLocationKey(previousLocation),\r\n\t\t\troutes : previousLocationRouteComponents\r\n\t\t}]\r\n\t}\r\n\r\n\t// Discard \"instant back\" chain part having same routes.\r\n\tconst sameRoutesIndex = findSameRoutesLocationIndex(chain, nextLocationRouteComponents)\r\n\tif (sameRoutesIndex >= 0) {\r\n\t\tchain = chain.slice(sameRoutesIndex + 1)\r\n\t}\r\n\r\n\t// Add the \"next\" page to the chain.\r\n\tchain.push({\r\n\t\tkey : getLocationKey(nextLocation),\r\n\t\troutes : nextLocationRouteComponents\r\n\t})\r\n\r\n\t// Save the chain.\r\n\tinstantNavigationChain = chain\r\n\tinstantNavigationChainIndex = chain.length - 1\r\n}\r\n\r\n/**\r\n * Checks if a \"Back\"/\"Forward\" transition should be \"instant\".\r\n * For \"Back\" transition it would mean that\r\n * the `<Link/>` has `instantBack` property set.\r\n * For \"Forward\" transition it would mean that\r\n * it's a reverse of an instant \"Back\" transition.\r\n * The order and position inside `chain` don't matter.\r\n */\r\nexport function isInstantTransition(fromLocation, toLocation)\r\n{\r\n\treturn indexOfByKey(instantNavigationChain, getLocationKey(fromLocation)) >= 0 &&\r\n\t\tindexOfByKey(instantNavigationChain, getLocationKey(toLocation)) >= 0\r\n}\r\n\r\n/**\r\n * Clears any \"instant back\" history.\r\n */\r\nexport function resetInstantNavigationChain() {\r\n\tinstantNavigationChain = []\r\n\tinstantNavigationChainIndex = -1\r\n}\r\n\r\n/**\r\n * Updates instant navigation chain's current route index.\r\n */\r\nexport function updateInstantNavigationChainIndex(location) {\r\n\tlet i = 0\r\n\twhile (i < instantNavigationChain.length) {\r\n\t\tif (instantNavigationChain[i].key === getLocationKey(location)) {\r\n\t\t\tinstantNavigationChainIndex = i\r\n\t\t\treturn\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\t// Shouldn't happen.\r\n\tconsole.error('[react-pages] Location not found in instant navigation chain', location)\r\n\tinstantNavigationChainIndex = -1\r\n}\r\n\r\n/**\r\n * Each history `location` has a randomly generated `key`.\r\n */\r\nconst getLocationKey = location => location.key\r\n\r\nfunction indexOfByKey(chain, key) {\r\n\tlet i = 0\r\n\twhile (i < chain.length) {\r\n\t\tif (chain[i].key === key) {\r\n\t\t\treturn i\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn -1\r\n}\r\n\r\nfunction findSameRoutesLocationIndex(chain, routes) {\r\n\tlet i = 0\r\n\twhile (i < chain.length) {\r\n\t\tif (chain[i].routes.length === routes.length) {\r\n\t\t\tlet j = 0\r\n\t\t\twhile (j < routes.length) {\r\n\t\t\t\tif (chain[i].routes[j] !== routes[j]) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tj++\r\n\t\t\t}\r\n\t\t\tif (j === routes.length) {\r\n\t\t\t\treturn i\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn -1\r\n}\r\n\r\n// Can be used to find out if the current page\r\n// transition was an \"instant\" one.\r\n// E.g. an Algolia \"Instant Search\" component\r\n// could reset the stored cached `resultsState`\r\n// if the transition was not an \"instant\" one.\r\nexport function wasInstantNavigation() {\r\n\treturn typeof window !== 'undefined' && window._react_pages_was_instant_navigation === true\r\n}\r\n\r\nexport function isInstantBackAbleNavigation() {\r\n\treturn typeof window !== 'undefined' && window._react_pages_is_instant_back_able_navigation\r\n}\r\n\r\nexport function setInstantNavigationFlag(value) {\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow._react_pages_was_instant_navigation = value\r\n\t}\r\n}\r\n\r\n/**\r\n * This function is also called with `false`\r\n * in order to set the flag to `false`.\r\n * Theoretically that might make sense in case of\r\n * two immediately consequtive `goto()` calls or something.\r\n * Though it's not a sane use case and may be considered invalid.\r\n * @param  {boolean} [instantBack]\r\n * @return\r\n */\r\nexport function markImmediateNavigationAsInstantBack(instantBack) {\r\n\t// Is being read in `./redux/middleware/router.js`\r\n\twindow._react_pages_instant_back_navigation = instantBack\r\n\tif (instantBack) {\r\n\t\t// Resetting the flag immediately after it's processed in router's POP event listener.\r\n\t\t// Could reset it there too.\r\n\t\t// Not resetting on some \"on navigation finished\" event because\r\n\t\t// `load` could throw and the navigation wouldn't conclude in that case.\r\n\t\tsetTimeout(() => window._react_pages_instant_back_navigation = false, 0)\r\n\t}\r\n}\r\n\r\nexport function canGoBackInstantly() {\r\n\treturn instantNavigationChainIndex > 0\r\n}\r\n\r\nexport function canGoForwardInstantly() {\r\n\treturn instantNavigationChainIndex < instantNavigationChain.length - 1\r\n}"],"file":"instantNavigation.js"}