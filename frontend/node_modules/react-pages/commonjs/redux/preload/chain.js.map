{"version":3,"sources":["../../../source/redux/preload/chain.js"],"names":["generatePreloadChain","preloaders","server","isInitialClientSidePreload","getState","dispatch","location","params","getCookie","preloading","setUpPreloaders","filter_preloaders","chain","chain_preloaders","length","promisify","preload_arguments","component_preloaders","preloader","setUpPreloader","preload","options","client","slice","forEach","_","i","filter","parallel","concat","is_preloader_blocking","get_preloader","Array","isArray","sibling_preloader","blocking","blockingSibling","Promise","all","map","link","reduce","promise","then","cancelled","resolve","array","part"],"mappings":"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","sourcesContent":["import { isServerSidePreloaded } from '../../client/flags'\r\n\r\n// Returns function returning a Promise\r\n// which resolves when all the required page `load`s are resolved.\r\n//\r\n// If no preloading is needed, then returns nothing.\r\n//\r\nexport default function generatePreloadChain\r\n(\r\n\tpreloaders,\r\n\tserver,\r\n\tisInitialClientSidePreload,\r\n\tgetState,\r\n\tdispatch,\r\n\tlocation,\r\n\tparams,\r\n\tgetCookie,\r\n\tpreloading\r\n)\r\n{\r\n\t// Set `.preload({ ... })` function arguments,\r\n\t// and also set default `load` options.\r\n\tsetUpPreloaders(\r\n\t\tpreloaders,\r\n\t\t{\r\n\t\t\tdispatch,\r\n\t\t\tgetState,\r\n\t\t\tlocation,\r\n\t\t\tparams,\r\n\t\t\tserver,\r\n\t\t\t// `getCookie` `load` parameter has been requested:\r\n\t\t\t// https://github.com/catamphetamine/react-website/issues/71\r\n\t\t\tgetCookie\r\n\t\t},\r\n\t\tserver\r\n\t)\r\n\r\n\t// Only select those `load`s which\r\n\t// should be run in current circumstances.\r\n\tpreloaders = filter_preloaders(preloaders, server, isInitialClientSidePreload)\r\n\r\n\t// Construct a sequential chain out of preloaders.\r\n\t// Because each of them could be either parallel or sequential.\r\n\tconst chain = chain_preloaders(preloaders)\r\n\r\n\t// If there are no `load`s for this route, then exit.\r\n\tif (chain.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Return a function which generates preloading `Promise` chain.\r\n\treturn () => promisify(chain, preloading)\r\n}\r\n\r\n// Applies default `load` options\r\n// and sets `load` function arguments.\r\nfunction setUpPreloaders(preloaders, preload_arguments, server)\r\n{\r\n\tfor (const component_preloaders of preloaders) {\r\n\t\tfor (const preloader of component_preloaders) {\r\n\t\t\tsetUpPreloader(preloader, preload_arguments, server)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Applies default `load` options\r\n// and sets `load` function arguments.\r\nfunction setUpPreloader(preloader, preload_arguments, server)\r\n{\r\n\tconst preload = preloader.preload\r\n\tpreloader.preload = () => preload(preload_arguments)\r\n\r\n\t// If Server-Side Rendering is not being used at all\r\n\t// then all `load`s must be marked as client-side ones.\r\n\tif (!server && !isServerSidePreloaded()) {\r\n\t\tpreloader.options.client = true\r\n\t}\r\n}\r\n\r\n// Selects only those `load`s which\r\n// should be run in current circumstances.\r\nexport function filter_preloaders(preloaders, server, isInitialClientSidePreload)\r\n{\r\n\t// `preloaders` array will be mutated\r\n\tpreloaders = preloaders.slice()\r\n\r\n\tpreloaders.forEach((_, i) =>\r\n\t{\r\n\t\tpreloaders[i] = preloaders[i].filter((preloader) =>\r\n\t\t{\r\n\t\t\t// Don't execute client-side-only `load`s on server side\r\n\t\t\tif (preloader.options.client && server) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\t// Don't execute server-side-only `load`s on client side\r\n\t\t\tif (preloader.options.server && !server) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\t// If it's initial client side preload (after the page has been loaded),\r\n\t\t\t// then only execute those `load`s marked as \"client-side-only\".\r\n\t\t\tif (isInitialClientSidePreload && !preloader.options.client) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t})\r\n\r\n\treturn preloaders.filter(component_preloaders => component_preloaders.length > 0)\r\n}\r\n\r\n// Constructs `preload` chain.\r\n//\r\n// @param `preloaders` is an array of `component_preloaders`.\r\n// `component_preloaders` is an array of all\r\n// `load`s for a particular React component.\r\n// Therefore `preloaders` is an array of arrays.\r\nexport function chain_preloaders(preloaders, chain = [], parallel = [])\r\n{\r\n\t// If all `preload`s have been visited\r\n\tif (preloaders.length === 0)\r\n\t{\r\n\t\tif (parallel.length === 0) {\r\n\t\t\treturn chain\r\n\t\t}\r\n\t\t// Finalize pending parallel `preload`s\r\n\t\tif (parallel.length === 1) {\r\n\t\t\treturn chain.concat(parallel)\r\n\t\t}\r\n\t\treturn chain.concat({ parallel })\r\n\t}\r\n\r\n\t// `component_preloaders` is an array of all\r\n\t// `load`s for a particular React component.\r\n\tconst preloader = preloaders[0]\r\n\tpreloaders = preloaders.slice(1)\r\n\r\n\tif (!is_preloader_blocking(preloader))\r\n\t{\r\n\t\treturn chain_preloaders(\r\n\t\t\tpreloaders,\r\n\t\t\tchain,\r\n\t\t\tconcat(parallel, get_preloader(preloader))\r\n\t\t)\r\n\t}\r\n\r\n\tif (parallel.length === 0)\r\n\t{\r\n\t\treturn chain_preloaders(\r\n\t\t\tpreloaders,\r\n\t\t\tconcat(chain, get_preloader(preloader)),\r\n\t\t\t[]\r\n\t\t)\r\n\t}\r\n\r\n\treturn chain_preloaders(\r\n\t\tpreloaders,\r\n\t\tchain.concat({ parallel: concat(parallel, get_preloader(preloader)) }),\r\n\t\t[]\r\n\t)\r\n}\r\n\r\nfunction get_preloader(preloader)\r\n{\r\n\t// A list of same component's `load`s\r\n\tif (Array.isArray(preloader)) {\r\n\t\treturn chain_preloaders(preloader)\r\n\t}\r\n\r\n\t// Same component adjacent `load`\r\n\treturn preloader.preload\r\n}\r\n\r\nfunction is_preloader_blocking(preloader)\r\n{\r\n\t// A list of same component's `load`s\r\n\tif (Array.isArray(preloader))\r\n\t{\r\n\t\t// Determine the proper `blocking` option\r\n\t\t// for this component's `load`s.\r\n\t\tfor (const sibling_preloader of preloader)\r\n\t\t{\r\n\t\t\t// If any of component's `load`s are `blocking: true`\r\n\t\t\t// then all of them are `blocking: true`.\r\n\t\t\tif (sibling_preloader.options.blocking)\r\n\t\t\t{\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Same component adjacent `load`\r\n\treturn preloader.options.blockingSibling\r\n}\r\n\r\n// Returns a `Promise` chain.\r\nfunction promisify(chain, preloading)\r\n{\r\n\tif (typeof chain === 'function') {\r\n\t\treturn chain()\r\n\t}\r\n\r\n\tif (typeof chain === 'object' && chain.parallel)\r\n\t{\r\n\t\treturn Promise.all(chain.parallel.map(link => promisify(link, preloading)))\r\n\t}\r\n\r\n\treturn chain.reduce((promise, link) =>\r\n\t{\r\n\t\treturn promise.then(() =>\r\n\t\t{\r\n\t\t\tif (preloading.cancelled) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn promisify(link, preloading)\r\n\t\t})\r\n\t},\r\n\tPromise.resolve())\r\n}\r\n\r\nfunction concat(array, part)\r\n{\r\n\tif (Array.isArray(part) && part.length > 1) {\r\n\t\t// Pushes an array\r\n\t\treturn array.concat([part])\r\n\t}\r\n\t// Pushes a single element\r\n\treturn array.concat(part)\r\n}"],"file":"chain.js"}