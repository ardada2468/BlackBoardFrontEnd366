{"version":3,"sources":["../source/helpers.js"],"names":["exists","what","object_constructor","constructor","isObject","object","extend","objects","filter","x","length","to","from","last","pop","intermediary_result","apply","Object","keys","key","Array","isArray","concat","clone","merge","parameters","prototype","slice","call","arguments","unshift","map","convert_from_camel_case","test","lo_dashed_key","replace","match","group_1","toLowerCase","escape_regexp","string","specials","RegExp","replace_all","where","with_what","regexp","starts_with","substring","indexOf","ends_with","i","j","is_empty","array","not_empty","repeat","times","result","is_blank","text","zip","a","b","_","index"],"mappings":"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","sourcesContent":["// // if the variable is defined\r\nexport const exists = what => typeof what !== 'undefined'\r\n\r\n// used for JSON object type checking\r\nconst object_constructor = {}.constructor\r\n\r\n// detects a JSON object\r\nexport function isObject(object)\r\n{\r\n\treturn exists(object) && (object !== null) && object.constructor === object_constructor\r\n}\r\n\r\n// extends the first object with\r\n/* istanbul ignore next: some weird transpiled code, not testable */\r\nexport function extend(...objects)\r\n{\r\n\tobjects = objects.filter(x => exists(x))\r\n\r\n\tif (objects.length === 0)\r\n\t{\r\n\t\treturn\r\n\t}\r\n\r\n\tif (objects.length === 1)\r\n\t{\r\n\t\treturn objects[0]\r\n\t}\r\n\r\n\tconst to   = objects[0]\r\n\tconst from = objects[1]\r\n\r\n\tif (objects.length > 2)\r\n\t{\r\n\t\tconst last = objects.pop()\r\n\t\tconst intermediary_result = extend.apply(this, objects)\r\n\t\treturn extend(intermediary_result, last)\r\n\t}\r\n\r\n\tfor (const key of Object.keys(from))\r\n\t{\r\n\t\tif (isObject(from[key]))\r\n\t\t{\r\n\t\t\tif (!isObject(to[key]))\r\n\t\t\t{\r\n\t\t\t\tto[key] = {}\r\n\t\t\t}\r\n\r\n\t\t\textend(to[key], from[key])\r\n\t\t}\r\n\t\telse if (Array.isArray(from[key]))\r\n\t\t{\r\n\t\t\tif (!Array.isArray(to[key]))\r\n\t\t\t{\r\n\t\t\t\tto[key] = []\r\n\t\t\t}\r\n\r\n\t\t\tto[key] = to[key].concat(clone(from[key]))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tto[key] = from[key]\r\n\t\t}\r\n\t}\r\n\r\n\treturn to\r\n}\r\n\r\nexport function merge()\r\n{\r\n\tconst parameters = Array.prototype.slice.call(arguments, 0)\r\n\tparameters.unshift({})\r\n\treturn extend.apply(this, parameters)\r\n}\r\n\r\nexport function clone(object)\r\n{\r\n\tif (isObject(object))\r\n\t{\r\n\t\treturn merge({}, object)\r\n\t}\r\n\telse if (Array.isArray(object))\r\n\t{\r\n\t\treturn object.map(x => clone(x))\r\n\t}\r\n\telse\r\n\t{\r\n\t\treturn object\r\n\t}\r\n}\r\n\r\n// creates camelCased aliases for all the keys of an object\r\nexport function convert_from_camel_case(object)\r\n{\r\n\tfor (const key of Object.keys(object))\r\n\t{\r\n\t\tif (/[A-Z]/.test(key))\r\n\t\t// if (key.indexOf('_') >= 0)\r\n\t\t{\r\n\t\t\t// const camel_cased_key = key.replace(/_(.)/g, function(match, group_1)\r\n\t\t\t// {\r\n\t\t\t// \treturn group_1.toUpperCase()\r\n\t\t\t// })\r\n\r\n\t\t\t// if (!exists(object[camel_cased_key]))\r\n\t\t\t// {\r\n\t\t\t// \tobject[camel_cased_key] = object[key]\r\n\t\t\t// \tdelete object[key]\r\n\t\t\t// }\r\n\r\n\t\t\tconst lo_dashed_key = key.replace(/([A-Z])/g, function(match, group_1)\r\n\t\t\t{\r\n\t\t\t\treturn '_' + group_1.toLowerCase()\r\n\t\t\t})\r\n\r\n\t\t\tif (!exists(object[lo_dashed_key]))\r\n\t\t\t{\r\n\t\t\t\tobject[lo_dashed_key] = object[key]\r\n\t\t\t\tdelete object[key]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn object\r\n}\r\n\r\nfunction escape_regexp(string)\r\n{\r\n\tconst specials = new RegExp(\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\", 'g')\r\n\treturn string.replace(specials, \"\\\\$&\")\r\n}\r\n\r\nexport function replace_all(where, what, with_what)\r\n{\r\n\tconst regexp = new RegExp(escape_regexp(what), 'g')\r\n\treturn where.replace(regexp, with_what)\r\n}\r\n\r\nexport function starts_with(string, substring)\r\n{\r\n\treturn string.indexOf(substring) === 0\r\n}\r\n\r\nexport function ends_with(string, substring)\r\n{\r\n\tlet i = string.length\r\n\tlet j = substring.length\r\n\r\n\tif (j > i)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\twhile (j > 0)\r\n\t{\r\n\t\ti--\r\n\t\tj--\r\n\r\n\t\tif (string[i] !== substring[j])\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n\r\n\t// const index = string.lastIndexOf(substring)\r\n\t// return index >= 0 && index === string.length - substring.length\r\n}\r\n\r\nexport function is_empty(array)\r\n{\r\n\treturn array.length === 0\r\n}\r\n\r\nexport function not_empty(array)\r\n{\r\n\treturn array.length > 0\r\n}\r\n\r\n// repeat string N times\r\nexport function repeat(what, times)\r\n{\r\n\tlet result = ''\r\n\twhile (times > 0)\r\n\t{\r\n\t\tresult += what\r\n\t\ttimes--\r\n\t}\r\n\treturn result\r\n}\r\n\r\n// if the text is blank\r\nexport function is_blank(text)\r\n{\r\n\treturn !exists(text) || !text.replace(/\\s/g, '')\r\n}\r\n\r\n// zips two arrays\r\nexport function zip(a, b)\r\n{\r\n\treturn a.map(function(_, index)\r\n\t{\r\n\t\treturn [a[index], b[index]]\r\n\t})\r\n}"],"file":"helpers.js"}