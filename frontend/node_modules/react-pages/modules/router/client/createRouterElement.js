import React from 'react';
import createConnectedRouter from 'found/createConnectedRouter';
import resolver from 'found/resolver';
import { ScrollManager } from 'found-scroll';
import _render from '../render';
export default function createRouterElement(renderArgs, _ref) {
  var dispatch = _ref.dispatch,
      getState = _ref.getState;
  var ConnectedRouter = createConnectedRouter({
    render: function render(renderArgs) {
      // Force re-mount the last route component on location path change.
      // https://github.com/4Catalyzer/found/issues/199#issuecomment-415616836
      var elements = renderArgs.elements;

      if (elements && window.reactPagesRemountOnNavigate !== false) {
        elements[elements.length - 1] = React.cloneElement(elements[elements.length - 1], {
          key: renderArgs.location.pathname
        });
      }

      return React.createElement(ScrollManager, {
        renderArgs: renderArgs
      }, _render(renderArgs));
    }
  });
  return React.createElement(ConnectedRouter, {
    matchContext: {
      dispatch: dispatch,
      getState: getState
    },
    resolver: resolver,
    initialRenderArgs: renderArgs
  });
}
//# sourceMappingURL=createRouterElement.js.map