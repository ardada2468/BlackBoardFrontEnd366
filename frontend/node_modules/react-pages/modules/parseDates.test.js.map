{"version":3,"sources":["../source/parseDates.test.js"],"names":["parseDates","describe","it","object","date","dates","non_dates","expect","to","be","an","Date","non_date","a"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEAC,QAAQ,CAAC,YAAD,EAAe,YACvB;AACCC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YACnC;AACC,QAAMC,MAAM,GACZ;AACCC,MAAAA,IAAI,EAAE,0BADP;AAGCC,MAAAA,KAAK,EACL,CACC,sBADD,EAEC,wBAFD,EAGC,0BAHD,EAIC,wBAJD,EAKC,wBALD,EAMC,2BAND,EAOC,0BAPD,EAQC,4BARD,EASC,4BATD,EAUC,0BAVD,CAJD;AAiBCC,MAAAA,SAAS,EACT,CACC,MADD,EAEC,SAFD,EAGC,YAHD,EAKC;AACA,yBAND,EAOC,mBAPD,EASC;AACA,4BAVD,EAYC;AACA,4BAbD,EAeC,eAfD,EAgBC,gBAhBD,EAiBC,kBAjBD,EAkBC,qBAlBD,EAmBC,uBAnBD,EAoBC,yBApBD,EAqBC,wBArBD,EAsBC,2BAtBD,EAuBC,0BAvBD,EAwBC,4BAxBD,EAyBC,4BAzBD,EA0BC,yBA1BD;AAlBD,KADA;AAiDAN,IAAAA,UAAU,CAACG,MAAD,CAAV;AAEAI,IAAAA,MAAM,CAACJ,MAAM,CAACC,IAAR,CAAN,CAAoBI,EAApB,CAAuBC,EAAvB,CAA0BC,EAA1B,eAAwCC,IAAxC;;AAEA,yBAAmBR,MAAM,CAACE,KAA1B,kHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UADWD,IACX;AACCG,MAAAA,MAAM,CAACH,IAAD,CAAN,CAAaI,EAAb,CAAgBC,EAAhB,CAAmBC,EAAnB,eAAiCC,IAAjC;AACA;;AAED,0BAAuBR,MAAM,CAACG,SAA9B,yHACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UADWM,QACX;AACCL,MAAAA,MAAM,CAACK,QAAD,CAAN,CAAiBJ,EAAjB,CAAoBC,EAApB,CAAuBI,CAAvB,CAAyB,QAAzB;AACA;AACD,GAhEC,CAAF;AAiEA,CAnEO,CAAR","sourcesContent":["import parseDates from './parseDates'\r\n\r\ndescribe('parseDates', function()\r\n{\r\n\tit('should parse dates correctly', function()\r\n\t{\r\n\t\tconst object =\r\n\t\t{\r\n\t\t\tdate: '2016-12-13T22:56:48.417Z',\r\n\r\n\t\t\tdates:\r\n\t\t\t[\r\n\t\t\t\t'2016-08-27T03:49:00Z',\r\n\t\t\t\t'2016-08-27T03:49:00.1Z',\r\n\t\t\t\t'2016-08-27T03:49:00.123Z',\r\n\t\t\t\t'2016-08-27T03:49:00-03',\r\n\t\t\t\t'2016-08-27T03:49:00+03',\r\n\t\t\t\t'2016-08-27T03:49:00+03:00',\r\n\t\t\t\t'2016-08-27T03:49:00+0300',\r\n\t\t\t\t'2016-08-27T21:12:24.506+03',\r\n\t\t\t\t'2016-08-27T21:12:24.506-03',\r\n\t\t\t\t'2016-12-13T22:56:48.417z'\r\n\t\t\t],\r\n\r\n\t\t\tnon_dates:\r\n\t\t\t[\r\n\t\t\t\t'2011',\r\n\t\t\t\t'2011-01',\r\n\t\t\t\t'2011-01-01',\r\n\r\n\t\t\t\t// No seconds\r\n\t\t\t\t'2011-01-01T03:49Z',\r\n\t\t\t\t'2016-08-27T03:49Z',\r\n\r\n\t\t\t\t// Invalid month\r\n\t\t\t\t'2011-15-30T03:49:00Z',\r\n\r\n\t\t\t\t// Invalid day\r\n\t\t\t\t'2011-12-32T03:49:00Z',\r\n\r\n\t\t\t\t'2016-08-27T03',\r\n\t\t\t\t'2016-08-27T03Z',\r\n\t\t\t\t'2016-08-27T03:49',\r\n\t\t\t\t'2016-08-27T03:49:00',\r\n\t\t\t\t'2016-08-27T03:49:00.1',\r\n\t\t\t\t'2016-08-27T03:49:00.123',\r\n\t\t\t\t'2016-08-27 03:49:00+03',\r\n\t\t\t\t'2016-08-27 03:49:00+03:00',\r\n\t\t\t\t'2016-08-27 03:49:00+0300',\r\n\t\t\t\t'2016-08-27 21:12:24.506+03',\r\n\t\t\t\t'2016-08-27 21:12:24.506-03',\r\n\t\t\t\t'2016-12-13T22:56:48.417'\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\tparseDates(object)\r\n\r\n\t\texpect(object.date).to.be.an.instanceof(Date)\r\n\r\n\t\tfor (const date of object.dates)\r\n\t\t{\r\n\t\t\texpect(date).to.be.an.instanceof(Date)\r\n\t\t}\r\n\r\n\t\tfor (const non_date of object.non_dates)\r\n\t\t{\r\n\t\t\texpect(non_date).to.be.a('string')\r\n\t\t}\r\n\t})\r\n})"],"file":"parseDates.test.js"}