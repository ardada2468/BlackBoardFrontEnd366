{"version":3,"sources":["../../../source/redux/middleware/router.js"],"names":["UPDATE_MATCH","RESOLVE_MATCH","_RESOLVE_MATCH","getRoutesByPath","getRoutePath","getComponentsMeta","mergeMeta","updateMeta","getCodeSplitMeta","getLocationUrl","shouldSkipPreloadForNavigation","ON_PAGE_LOADED_METHOD_NAME","PRELOAD_STARTED","PRELOAD_FINISHED","PRELOAD_FAILED","isInstantTransition","setInstantNavigationFlag","addInstantBack","updateInstantNavigationChainIndex","resetInstantNavigationChain","isServerSidePreloaded","routerMiddleware","routes","codeSplit","onBeforeNavigate","onNavigate","reportStats","defaultMeta","startedAt","previousLocation","previousRouteIndices","dispatch","getState","next","event","window","_react_pages_initial_prerender","location","payload","routeIndices","type","_react_pages_router_rendered","_react_pages_update_match_event_payload","Date","now","_isInstantTransition","action","instantBack","_react_pages_instant_back_navigation","_react_pages_is_instant_back_able_navigation","params","Error","pathname","routeChain","pageRoute","length","onPageLoaded","Component","updateMetaTags","url","route","time","loadAndRender","console","log","state","meta","map","_"],"mappings":"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","sourcesContent":["import { UPDATE_MATCH, RESOLVE_MATCH, _RESOLVE_MATCH, getRoutesByPath, getRoutePath } from '../../router'\r\nimport { getComponentsMeta, mergeMeta, updateMeta, getCodeSplitMeta } from '../../meta/meta'\r\nimport { getLocationUrl, shouldSkipPreloadForNavigation } from '../../location'\r\nimport { ON_PAGE_LOADED_METHOD_NAME } from '../client/onPageLoaded'\r\n\r\nimport {\r\n\tPRELOAD_STARTED,\r\n\tPRELOAD_FINISHED,\r\n\tPRELOAD_FAILED\r\n} from '../preload/actions'\r\n\r\nimport {\r\n\tisInstantTransition,\r\n\tsetInstantNavigationFlag,\r\n\taddInstantBack,\r\n\tupdateInstantNavigationChainIndex,\r\n\tresetInstantNavigationChain\r\n} from '../client/instantNavigation'\r\n\r\nimport { isServerSidePreloaded } from '../../client/flags'\r\n\r\n// Any events listened to here are being dispatched on client side.\r\nexport default function routerMiddleware(\r\n\troutes,\r\n\tcodeSplit,\r\n\tonBeforeNavigate,\r\n\tonNavigate,\r\n\treportStats,\r\n\tdefaultMeta\r\n) {\r\n\tlet startedAt\r\n\tlet previousLocation\r\n\tlet previousRouteIndices\r\n\r\n\treturn ({ dispatch, getState }) =>\r\n\t{\r\n\t\treturn next => event =>\r\n\t\t{\r\n\t\t\t// Skip the first pass of the initial client-side render.\r\n\t\t\t// for the case when server-side rendering is used.\r\n\t\t\tif (window._react_pages_initial_prerender) {\r\n\t\t\t\treturn next(event)\r\n\t\t\t}\r\n\r\n\t\t\tconst location = event.payload && event.payload.location\r\n\t\t\tconst routeIndices = event.payload && event.payload.routeIndices\r\n\r\n\t\t\tswitch (event.type) {\r\n\t\t\t\tcase UPDATE_MATCH:\r\n\t\t\t\t\t// A workaround for `found` router bug:\r\n\t\t\t\t\t// https://github.com/4Catalyzer/found/issues/239\r\n\t\t\t\t\t// Skip `load` and other stuff for anchor link navigation.\r\n\t\t\t\t\tif (previousLocation && shouldSkipPreloadForNavigation(previousLocation, location)) {\r\n\t\t\t\t\t\t// I guess this workaround won't work with `codeSplit: true`\r\n\t\t\t\t\t\t// because `codeSplit` doesn't use the global `getData` loader.\r\n\t\t\t\t\t\tif (!codeSplit) {\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store `event.payload` for the future `_UPDATE_MATCH` event.\r\n\t\t\t\t\tif (!window._react_pages_router_rendered && !isServerSidePreloaded()) {\r\n\t\t\t\t\t\twindow._react_pages_update_match_event_payload = event.payload\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Measure `load` and `render` time.\r\n\t\t\t\t\tstartedAt = Date.now()\r\n\r\n\t\t\t\t\t// If it's an instant \"Back\"/\"Forward\" navigation\r\n\t\t\t\t\t// then navigate to the page without loading it.\r\n\t\t\t\t\t// (has been previously preloaded and is in Redux state)\r\n\t\t\t\t\tconst _isInstantTransition =\r\n\t\t\t\t\t\tlocation.action === 'POP' &&\r\n\t\t\t\t\t\tpreviousLocation &&\r\n\t\t\t\t\t\tisInstantTransition(previousLocation, location)\r\n\r\n\t\t\t\t\t// Set the flag for `wasInstantNavigation()`.\r\n\t\t\t\t\tsetInstantNavigationFlag(_isInstantTransition)\r\n\r\n\t\t\t\t\t// Indicates whether an `instantBack` `<Link/>` has been clicked.\r\n\t\t\t\t\t// (or if `goto()` has been called with `instantBack: true` option)\r\n\t\t\t\t\tconst instantBack = window._react_pages_instant_back_navigation\r\n\r\n\t\t\t\t\t// Update instant back navigation chain.\r\n\t\t\t\t\tif (instantBack) {\r\n\t\t\t\t\t\t// Stores \"current\" (soon to be \"previous\") location\r\n\t\t\t\t\t\t// in \"instant back chain\", so that if \"Back\" is clicked\r\n\t\t\t\t\t\t// then such transition could be detected as \"should be instant\".\r\n\t\t\t\t\t\taddInstantBack(\r\n\t\t\t\t\t\t\tlocation,\r\n\t\t\t\t\t\t\tpreviousLocation,\r\n\t\t\t\t\t\t\trouteIndices,\r\n\t\t\t\t\t\t\tpreviousRouteIndices\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else if (_isInstantTransition) {\r\n\t\t\t\t\t\tupdateInstantNavigationChainIndex(location)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If current transition is not \"instant back\" and not \"instant\"\r\n\t\t\t\t\t\t// then reset the whole \"instant back\" chain.\r\n\t\t\t\t\t\t// Only a consequitive \"instant back\" navigation chain\r\n\t\t\t\t\t\t// preserves the ability to instantly navigate \"Back\".\r\n\t\t\t\t\t\t// Once a regular navigation takes place\r\n\t\t\t\t\t\t// all previous \"instant back\" possibilities are discarded.\r\n\t\t\t\t\t\tresetInstantNavigationChain()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set the flag for `isInstantBackAbleNavigation()`.\r\n\t\t\t\t\t// `instantBack` is for a \"forward\" instant-back-able navigation.\r\n\t\t\t\t\t// `_isInstantTransition` is for a \"backwards\" instant-back-able navigation.\r\n\t\t\t\t\tif (instantBack || _isInstantTransition) {\r\n\t\t\t\t\t\twindow._react_pages_is_instant_back_able_navigation = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// // `RESOLVE_MATCH` is not being emitted\r\n\t\t\t\t\t// // for the first render for some reason.\r\n\t\t\t\t\t// // https://github.com/4Catalyzer/found/issues/202\r\n\t\t\t\t\t// const isFirstRender = !previousLocation\r\n\t\t\t\t\t// if (isFirstRender) {\r\n\t\t\t\t\t// \tupdateMetaTags(\r\n\t\t\t\t\t// \t\trouteIndices,\r\n\t\t\t\t\t// \t\tgetState(),\r\n\t\t\t\t\t// \t\t{\r\n\t\t\t\t\t// \t\t\troutes,\r\n\t\t\t\t\t// \t\t\tcodeSplit,\r\n\t\t\t\t\t// \t\t\tdefaultMeta\r\n\t\t\t\t\t// \t\t}\r\n\t\t\t\t\t// \t)\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t// \t// Show page loading indicator.\r\n\t\t\t\t\t// \tdispatch({ type: PRELOAD_STARTED })\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tif (onBeforeNavigate) {\r\n\t\t\t\t\t\tonBeforeNavigate({\r\n\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\tgetState,\r\n\t\t\t\t\t\t\tlocation: event.payload.location,\r\n\t\t\t\t\t\t\tparams: event.payload.params\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Show page loading indicator.\r\n\t\t\t\t\tif (!isServerSidePreloaded() && !window._react_pages_router_rendered) {\r\n\t\t\t\t\t\t// Don't show page loading indicator\r\n\t\t\t\t\t\t// because it's already being shown manually.\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Show page loading indicator.\r\n\t\t\t\t\t\tdispatch({ type: PRELOAD_STARTED })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t// `RESOLVE_MATCH` is not being dispatched\r\n\t\t\t\t// for the first render for some reason.\r\n\t\t\t\t// https://github.com/4Catalyzer/found/issues/202\r\n\t\t\t\t// With server-side rendering enabled\r\n\t\t\t\t// initially there are two rendering passes\r\n\t\t\t\t// and therefore `RESOLVE_MATCH` does get dispatched\r\n\t\t\t\t// after the page is initialized and rendered.\r\n\t\t\t\t// With server-side rendering disabled\r\n\t\t\t\t// `RESOLVE_MATCH` does not get dispatched\r\n\t\t\t\t// therefore a custom `_RESOLVE_MATCH` event is\r\n\t\t\t\t// dispatched manually.\r\n\t\t\t\tcase RESOLVE_MATCH:\r\n\t\t\t\tcase _RESOLVE_MATCH:\r\n\t\t\t\t\t// A workaround for `found` router bug:\r\n\t\t\t\t\t// https://github.com/4Catalyzer/found/issues/239\r\n\t\t\t\t\t// Skip `load` and other stuff for anchor link navigation.\r\n\t\t\t\t\tif (previousLocation && shouldSkipPreloadForNavigation(previousLocation, location)) {\r\n\t\t\t\t\t\t// I guess this workaround won't work with `codeSplit: true`\r\n\t\t\t\t\t\t// because it doesn't use the global `getData` loader.\r\n\t\t\t\t\t\tif (!codeSplit) {\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// `routeIndices` might be `undefined` after a `<Redirect/>`\r\n\t\t\t\t\t// is made and a user clicks the \"Back\" button in a web browser.\r\n\t\t\t\t\t// https://github.com/4Catalyzer/found/issues/632\r\n\t\t\t\t\tif (!routeIndices) {\r\n\t\t\t\t\t\tthrow new Error(`\"${event.type}\" Redux action misses \"routeIndices\" property. This usually means that the target URL path \"${location.pathname}\" didn't match any route. ${location.pathname[0] !== '/' ? 'The target URL path is missing a leading slash: correct your routes configuration to include a leading slash for \"' + location.pathname + '\" path. ' : ''}See the issue for more info: https://github.com/4Catalyzer/found/issues/632`)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// `previousLocation` is only used for \"instant back\" navigation.\r\n\t\t\t\t\t// Therefore it can be skipped in case of anchor link navigation.\r\n\t\t\t\t\tpreviousLocation = location\r\n\t\t\t\t\tpreviousRouteIndices = routeIndices\r\n\r\n\t\t\t\t\tif (!window._react_pages_router_rendered) {\r\n\t\t\t\t\t\twindow._react_pages_router_rendered = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Call `onLoaded`.\r\n\t\t\t\t\tif (!codeSplit) {\r\n\t\t\t\t\t\tconst routeChain = getRoutesByPath(routeIndices, routes)\r\n\t\t\t\t\t\tconst pageRoute = routeChain[routeChain.length - 1]\r\n\t\t\t\t\t\t// Routes don't have `.Component` property\r\n\t\t\t\t\t\t// set when using `codeSplit` feature.\r\n\t\t\t\t\t\tconst onPageLoaded = pageRoute.Component[ON_PAGE_LOADED_METHOD_NAME]\r\n\t\t\t\t\t\tif (onPageLoaded) {\r\n\t\t\t\t\t\t\tonPageLoaded({ dispatch, getState, location })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Update `<meta/>`.\r\n\t\t\t\t\tupdateMetaTags(\r\n\t\t\t\t\t\trouteIndices,\r\n\t\t\t\t\t\tgetState(),\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\troutes,\r\n\t\t\t\t\t\t\tcodeSplit,\r\n\t\t\t\t\t\t\tdefaultMeta\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tif (onNavigate) {\r\n\t\t\t\t\t\tonNavigate(getLocationUrl(location), location, {\r\n\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\tgetState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reset the flag for `isInstantBackAbleNavigation()`.\r\n\t\t\t\t\twindow._react_pages_is_instant_back_able_navigation = false\r\n\r\n\t\t\t\t\t// Report page loading time.\r\n\t\t\t\t\t// This loading time will be longer then\r\n\t\t\t\t\t// the server-side one, say, by 10 milliseconds,\r\n\t\t\t\t\t// probably because the web browser making\r\n\t\t\t\t\t// an asynchronous HTTP request is slower\r\n\t\t\t\t\t// than the Node.js server making a regular HTTP request.\r\n\t\t\t\t\t// Also this includes network latency\r\n\t\t\t\t\t// for a particular website user, etc.\r\n\t\t\t\t\t// So this `load` time doesn't actually describe\r\n\t\t\t\t\t// the server-side performance.\r\n\t\t\t\t\tif (reportStats) {\r\n\t\t\t\t\t\treportStats({\r\n\t\t\t\t\t\t\turl: getLocationUrl(location),\r\n\t\t\t\t\t\t\t// Concatenated route `path` string.\r\n\t\t\t\t\t\t\t// E.g. \"/user/:user_id/post/:post_id\"\r\n\t\t\t\t\t\t\troute: getRoutePath(getRoutesByPath(routeIndices, routes)),\r\n\t\t\t\t\t\t\ttime: {\r\n\t\t\t\t\t\t\t\tloadAndRender: Date.now() - startedAt\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Hide page loading indicator.\r\n\t\t\t\t\tdispatch({ type: PRELOAD_FINISHED })\r\n\r\n\t\t\t\t\t// Report loading time in console for debugging.\r\n\t\t\t\t\tif (Date.now() - startedAt > 30) {\r\n\t\t\t\t\t\tconsole.log(`[react-pages] \"${location.pathname}\" loaded and rendered in ${Date.now() - startedAt} ms`)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\treturn next(event)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction updateMetaTags(routeIndices, state, { routes, codeSplit, defaultMeta }) {\r\n\tconst routeChain = getRoutesByPath(routeIndices, routes)\r\n\t// Get `<meta/>` for the route.\r\n\tlet meta = codeSplit ? getCodeSplitMeta(routeChain, state) : getComponentsMeta(routeChain.map(_ => _.Component), state)\r\n\tmeta = mergeMeta(meta)\r\n\tmeta = { ...defaultMeta, ...meta }\r\n\t// Update `<meta/>`.\r\n\tupdateMeta(meta)\r\n}"],"file":"router.js"}