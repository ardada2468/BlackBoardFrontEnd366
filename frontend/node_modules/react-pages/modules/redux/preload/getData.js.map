{"version":3,"sources":["../../../source/redux/preload/getData.js"],"names":["getLocationUrl","shouldSkipPreloadForNavigation","redirect","getMatchedRoutes","getMatchedRoutesIndices","getMatchedRoutesParams","getRouteParams","getCurrentlyMatchedLocation","getPreviouslyMatchedLocation","RedirectException","preload","createGetDataForPreload","codeSplit","server","onError","getLocale","getConvertedRoutes","getCookie","params","context","dispatch","getState","window","_react_pages_skip_preload","_react_pages_skip_preload_update_location","_react_pages_hot_reload","getLocations","location","previousLocation","isInitialClientSideNavigation","undefined","routes","routeIndices","routeParams","then","error","path","pathname","url","to","state","_react_pages_router_rendered"],"mappings":"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","sourcesContent":["import { getLocationUrl, shouldSkipPreloadForNavigation } from '../../location'\r\n\r\nimport {\r\n\tredirect,\r\n\tgetMatchedRoutes,\r\n\tgetMatchedRoutesIndices,\r\n\tgetMatchedRoutesParams,\r\n\tgetRouteParams,\r\n\tgetCurrentlyMatchedLocation,\r\n\tgetPreviouslyMatchedLocation,\r\n\tRedirectException\r\n} from '../../router'\r\n\r\nimport preload from './preload'\r\n\r\nexport default function createGetDataForPreload(codeSplit, server, onError, getLocale, getConvertedRoutes, getCookie) {\r\n\treturn function({ params, context: { dispatch, getState } }) {\r\n\t\tif (!server) {\r\n\t\t\tif (window._react_pages_skip_preload ||\r\n\t\t\t\twindow._react_pages_skip_preload_update_location ||\r\n\t\t\t\twindow._react_pages_hot_reload) {\r\n\t\t\t\t// Reset \"skip `load`\" flag for `pushLocation()` and `replaceLocation()`.\r\n\t\t\t\tif (window._react_pages_skip_preload_update_location) {\r\n\t\t\t\t\twindow._react_pages_skip_preload_update_location = false;\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst { location, previousLocation } = getLocations(getState())\r\n\t\tconst isInitialClientSideNavigation = !server && !previousLocation\r\n\t\t// A workaround for `found` router bug:\r\n\t\t// https://github.com/4Catalyzer/found/issues/239\r\n\t\t// Prevent executing `load`s on \"anchor\" link click.\r\n\t\tif (!server && !isInitialClientSideNavigation) {\r\n\t\t\tif (shouldSkipPreloadForNavigation(previousLocation, location)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Execute `load`s.\r\n\t\treturn preload(\r\n\t\t\tlocation,\r\n\t\t\tisInitialClientSideNavigation ? undefined : previousLocation,\r\n\t\t\t{\r\n\t\t\t\troutes: getMatchedRoutes(getState(), getConvertedRoutes()),\r\n\t\t\t\trouteIndices: getMatchedRoutesIndices(getState()),\r\n\t\t\t\trouteParams: getMatchedRoutesParams(getState()),\r\n\t\t\t\tparams: getRouteParams(getState())\r\n\t\t\t},\r\n\t\t\tcodeSplit,\r\n\t\t\tserver,\r\n\t\t\tgetCookie,\r\n\t\t\tgetLocale,\r\n\t\t\tdispatch,\r\n\t\t\tgetState\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t() => {},\r\n\t\t\t(error) => {\r\n\t\t\t\t// Possibly handle the error (for example, redirect to an error page).\r\n\t\t\t\tif (!(error instanceof RedirectException)) {\r\n\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\tonError(error, {\r\n\t\t\t\t\t\t\tpath : location.pathname,\r\n\t\t\t\t\t\t\turl  : getLocationUrl(location),\r\n\t\t\t\t\t\t\t// Using `redirect` instead of `goto` here\r\n\t\t\t\t\t\t\t// so that the user can't go \"Back\" to the page being preloaded\r\n\t\t\t\t\t\t\t// in case of an error because it would be in inconsistent state\r\n\t\t\t\t\t\t\t// due to `load` being interrupted.\r\n\t\t\t\t\t\t\tredirect(to) {\r\n\t\t\t\t\t\t\t\tthrow new RedirectException(to)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tgetState,\r\n\t\t\t\t\t\t\tserver\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction getLocations(state) {\r\n\tconst server = typeof window === 'undefined'\r\n\treturn {\r\n\t\tlocation: getCurrentlyMatchedLocation(state),\r\n\t\tpreviousLocation: (server || !window._react_pages_router_rendered) ? undefined : getPreviouslyMatchedLocation(state)\r\n\t}\r\n}"],"file":"getData.js"}