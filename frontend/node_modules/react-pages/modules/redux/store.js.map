{"version":3,"sources":["../../source/redux/store.js"],"names":["React","createStore","combineReducers","applyMiddleware","compose","composeWithDevTools","asynchronousMiddleware","routerMiddleware","preloadReducer","createGetDataForPreload","translateReducer","checkForAutogeneratedEventNameCollision","convertRoutes","foundReducer","createRouterStoreEnhancers","initializeRouter","_createStore","settings","data","createHistoryProtocol","httpClient","options","reducers","reduxMiddleware","reduxStoreEnhancers","reduxEventNaming","http","onError","getLocale","codeSplit","meta","showLoadingInitially","routes","server","devtools","stats","onBeforeNavigate","onNavigate","getCookie","convertedRoutes","getConvertedRoutes","getData","Array","isArray","cloneElement","middleware","push","getErrorData","storeEnhancers","basename","store","getStoreEnhancersComposer","createReducer","hotReload","replaceReducer","RESERVED_REDUCER_NAMES","reducerName","Error","found","preload"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\r\n\r\nimport asynchronousMiddleware from './middleware/asynchronous'\r\nimport routerMiddleware from './middleware/router'\r\n\r\nimport preloadReducer from './preload/reducer'\r\nimport createGetDataForPreload from './preload/getData'\r\n\r\nimport translateReducer from './translate/reducer'\r\n\r\nimport { checkForAutogeneratedEventNameCollision } from './naming'\r\n\r\nimport {\r\n\tconvertRoutes,\r\n\tfoundReducer,\r\n\tcreateRouterStoreEnhancers,\r\n\tinitializeRouter\r\n} from '../router'\r\n\r\nexport default function _createStore(settings, data, createHistoryProtocol, httpClient, options)\r\n{\r\n\tconst {\r\n\t\treducers,\r\n\t\treduxMiddleware,\r\n\t\treduxStoreEnhancers,\r\n\t\treduxEventNaming,\r\n\t\thttp,\r\n\t\tonError,\r\n\t\tgetLocale,\r\n\t\tcodeSplit,\r\n\t\tmeta,\r\n\t\tshowLoadingInitially\r\n\t} = settings\r\n\r\n\tlet {\r\n\t\troutes\r\n\t} = settings\r\n\r\n\tconst {\r\n\t\tserver,\r\n\t\tdevtools,\r\n\t\tstats,\r\n\t\tonBeforeNavigate,\r\n\t\tonNavigate,\r\n\t\tgetCookie\r\n\t} = options\r\n\r\n\t// `routes` will be converted.\r\n\tlet convertedRoutes\r\n\tconst getConvertedRoutes = () => convertedRoutes\r\n\r\n\t// Add `load` data hook.\r\n\tconst getData = createGetDataForPreload(codeSplit, server, onError, getLocale, getConvertedRoutes, getCookie)\r\n\tif (Array.isArray(routes)) {\r\n\t\t// If there's an error on client side in `setUpAndRender()` then it's called again.\r\n\t\t// And in that case `getData` is set and this error will be thrown.\r\n\t\t// if (routes[0].getData) {\r\n\t\t// \tthrow new Error('[react-pages] `getData` found on the root route')\r\n\t\t// }\r\n\t\troutes[0].getData = getData\r\n\t} else {\r\n\t\t// Set `getData`.\r\n\t\t// If there's an error on client side in `setUpAndRender()` then it's called again.\r\n\t\t// And in that case `getData` is set and this error will be thrown.\r\n\t\t// if (routes.props.getData) {\r\n\t\t// \tthrow new Error('[react-pages] `getData` found on the root route')\r\n\t\t// }\r\n\t\troutes = React.cloneElement(routes, { getData })\r\n\t\t// Convert `found` `<Route/>`s to a JSON structure.\r\n\t\troutes = convertRoutes(routes)\r\n\t}\r\n\tconvertedRoutes = routes\r\n\r\n\t// Redux middleware.\r\n\t// User may supply his own Redux middleware.\r\n\tconst middleware = reduxMiddleware ? reduxMiddleware() : []\r\n\r\n\t// Built-in middleware.\r\n\tmiddleware.push(\r\n\t\t// Asynchronous middleware (e.g. for HTTP Ajax calls).\r\n\t\tasynchronousMiddleware(\r\n\t\t\thttpClient,\r\n\t\t\treduxEventNaming,\r\n\t\t\tserver,\r\n\t\t\thttp.onError,\r\n\t\t\thttp.getErrorData\r\n\t\t)\r\n\t)\r\n\r\n\tif (!server) {\r\n\t\tmiddleware.push(routerMiddleware(\r\n\t\t\troutes,\r\n\t\t\tcodeSplit,\r\n\t\t\tonBeforeNavigate,\r\n\t\t\tonNavigate,\r\n\t\t\tstats,\r\n\t\t\tmeta\r\n\t\t))\r\n\t}\r\n\r\n\t// Redux \"store enhancers\"\r\n\tconst storeEnhancers = []\r\n\r\n\t// User may supply his own Redux store enhancers.\r\n\tif (reduxStoreEnhancers) {\r\n\t\tstoreEnhancers.push(...reduxStoreEnhancers())\r\n\t}\r\n\r\n\tstoreEnhancers.push(...createRouterStoreEnhancers(routes, createHistoryProtocol, {\r\n\t\tbasename: settings.basename\r\n\t}))\r\n\r\n\t// Redux middleware are applied in reverse order.\r\n\t// (which is counter-intuitive)\r\n\tstoreEnhancers.push(applyMiddleware(...middleware))\r\n\r\n\t// Create Redux store.\r\n\tconst store = getStoreEnhancersComposer(server, devtools)(...storeEnhancers)(createStore)(createReducer(reducers, showLoadingInitially), data)\r\n\r\n\t// On the client side, add `hotReload()` function to the `store`.\r\n\t// (could just add this function to `window` but adding it to the `store` fits more)\r\n\tif (!server) {\r\n\t\t// `hotReload` helper function gives the web application means to hot reload its Redux reducers\r\n\t\tstore.hotReload = (reducers) => store.replaceReducer(createReducer(reducers, showLoadingInitially))\r\n\t}\r\n\r\n\t// Initialize `found`.\r\n\tinitializeRouter(store)\r\n\r\n\t// Return the Redux store\r\n\treturn store\r\n}\r\n\r\nfunction createReducer(reducers, showLoadingInitially)\r\n{\r\n\t// Check for reserved reducer names.\r\n\tfor (const reducerName of RESERVED_REDUCER_NAMES) {\r\n\t\tif (reducers[reducerName]) {\r\n\t\t\tthrow new Error(`\"${reducerName}\" reducer name is reserved.`)\r\n\t\t}\r\n\t}\r\n\t// Check for `ReduxModule` autogenerated event names conflicts.\r\n\tcheckForAutogeneratedEventNameCollision(reducers)\r\n\t// Clone the object because it will be modified.\r\n\treducers = { ...reducers }\r\n\t// Add `found` reducer.\r\n\treducers.found = foundReducer\r\n\t// Add `load` status reducer.\r\n\treducers.preload = preloadReducer(showLoadingInitially)\r\n\t// // Add `@translate()` reducer.\r\n\t// reducers.translation = translateReducer\r\n\t// Create the compound reducer.\r\n\treturn combineReducers(reducers)\r\n}\r\n\r\nfunction getStoreEnhancersComposer(server, devtools)\r\n{\r\n\t// Redux DevTools aren't used on the server side\r\n\tif (server) {\r\n\t\treturn compose\r\n\t}\r\n\r\n\t// Custom behaviour\r\n\tif (devtools && devtools.compose) {\r\n\t\treturn devtools.compose\r\n\t}\r\n\r\n\t// With custom options\r\n\tif (devtools && devtools.options) {\r\n\t\treturn composeWithDevTools(devtools.options)\r\n\t}\r\n\r\n\t// Without custom options\r\n\treturn composeWithDevTools\r\n}\r\n\r\nconst RESERVED_REDUCER_NAMES = [\r\n\t'found',\r\n\t'location',\r\n\t'preload',\r\n\t'translation'\r\n]"],"file":"store.js"}