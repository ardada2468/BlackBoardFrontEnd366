{"version":3,"sources":["../../../source/redux/translate/collect.js"],"names":["TRANSLATE_LOCALES_PROPERTY","collectTranslations","components","routes","routeIndices","codeSplit","locale","dispatch","forEach","route","i","_key","slice","join","translations","map","component","path","getTranslation","filter","_","length","Promise","all","then","translation"],"mappings":"AAAA,SAASA,0BAAT,QAA2C,wBAA3C;AAEA,eAAe,SAASC,mBAAT,CAA6BC,UAA7B,EAAyCC,MAAzC,EAAiDC,YAAjD,EAA+DC,SAA/D,EAA0EC,MAA1E,EAAkFC,QAAlF,EAA4F;AAC1G;AACA;AACA;AACA;AACA;AACAJ,EAAAA,MAAM,CAACK,OAAP,CAAe,UAACC,KAAD,EAAQC,CAAR,EAAc;AAC5BD,IAAAA,KAAK,CAACE,IAAN,GAAaP,YAAY,CAACQ,KAAb,CAAmB,CAAnB,EAAsBF,CAAC,GAAG,CAA1B,EAA6BG,IAA7B,CAAkC,GAAlC,CAAb;AACA,GAFD;AAGA,MAAMC,YAAY,GAAGZ,UAAU,CAC7Ba,GADmB,CACf,UAACC,SAAD,EAAYN,CAAZ;AAAA,WAAmB;AACvBO,MAAAA,IAAI,EAAEd,MAAM,CAACO,CAAD,CAAN,CAAUC,IADO;AAEvBO,MAAAA,cAAc,EAAEF,SAAS,CAAChB,0BAAD,CAAT,IAAyCgB,SAAS,CAAChB,0BAAD,CAAT,CAAsCM,MAAtC;AAFlC,KAAnB;AAAA,GADe,EAKnBa,MALmB,CAKZ,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACF,cAAN;AAAA,GALW,CAArB;;AAMA,MAAIJ,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AAC5B,WAAO;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACC,GAAb,CAAiB,gBAA8B;AAAA,YAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,cAAqB,QAArBA,cAAqB;AACvE,eAAOA,cAAc,GAAGM,IAAjB,CAAsB,UAACC,WAAD;AAAA,iBAAiBlB,QAAQ,CAAC,2BAAD,EAA8B;AACnFU,YAAAA,IAAI,EAAJA,IADmF;AAEnFQ,YAAAA,WAAW,EAAXA;AAFmF,WAA9B,CAAzB;AAAA,SAAtB,CAAP;AAIA,OALwB,CAAZ,CAAN;AAAA,KAAP;AAMA;AACD","sourcesContent":["import { TRANSLATE_LOCALES_PROPERTY } from '../translate/decorator'\r\n\r\nexport default function collectTranslations(components, routes, routeIndices, codeSplit, locale, dispatch) {\r\n\t// Set the `_key` for each route.\r\n\t// Each page component gets `route` property\r\n\t// from which it can get the `_key`\r\n\t// and using that `_key` it can get the\r\n\t// translation data from Redux state.\r\n\troutes.forEach((route, i) => {\r\n\t\troute._key = routeIndices.slice(0, i + 1).join('/')\r\n\t})\r\n\tconst translations = components\r\n\t\t.map((component, i) => ({\r\n\t\t\tpath: routes[i]._key,\r\n\t\t\tgetTranslation: component[TRANSLATE_LOCALES_PROPERTY] && component[TRANSLATE_LOCALES_PROPERTY][locale]\r\n\t\t}))\r\n\t\t.filter(_ => _.getTranslation)\r\n\tif (translations.length > 0) {\r\n\t\treturn () => Promise.all(translations.map(({ path, getTranslation }) => {\r\n\t\t\treturn getTranslation().then((translation) => dispatch('@@react-pages/translation', {\r\n\t\t\t\tpath,\r\n\t\t\t\ttranslation\r\n\t\t\t}))\r\n\t\t}))\r\n\t}\r\n}"],"file":"collect.js"}