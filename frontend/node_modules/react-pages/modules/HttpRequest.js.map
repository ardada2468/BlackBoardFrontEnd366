{"version":3,"sources":["../source/HttpRequest.js"],"names":["parseDates","isObject","HttpRequest","method","url","data","options","agent","headers","shouldParseJsonDates","onAddCookies","onResponseHeaders","request","query","hasBinaryData","addMultipartData","send","Error","JSON","stringify","set","authTokenHeader","authentication","getAuthToken","getCookie","originalUrl","token","cookies","cookiesToAdd","size","cookieRaw","getCookieKeyAndValue","key","value","Object","keys","length","map","join","progress","on","event","direction","lengthComputable","percent","then","response","statusCode","getResponseData","error","populateErrorDataFromResponse","responseData","status","type","message","html","stack","parse","body","text","semicolonIndex","indexOf","slice","trim","split","parameter","HTMLInputElement","files","FileList","i","attach","File","field","Blob"],"mappings":"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","sourcesContent":["import parseDates from './parseDates'\r\nimport { isObject } from './helpers'\r\n\r\n// Performs HTTP requests\r\nexport default class HttpRequest {\r\n\tconstructor(method, url, data, options) {\r\n\t\tconst {\r\n\t\t\tagent,\r\n\t\t\theaders,\r\n\t\t\tshouldParseJsonDates,\r\n\t\t\tonAddCookies,\r\n\t\t\tonResponseHeaders\r\n\t\t} = options\r\n\r\n\t\tthis.onAddCookies = onAddCookies\r\n\r\n\t\t// Create Http request.\r\n\t\tthis.request = agent[method](url)\r\n\r\n\t\t// Attach data to the outgoing HTTP request\r\n\t\tif (data) {\r\n\t\t\tswitch (method) {\r\n\t\t\t\tcase 'get':\r\n\t\t\t\t\tthis.request.query(data)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'post':\r\n\t\t\t\tcase 'put':\r\n\t\t\t\tcase 'patch':\r\n\t\t\t\tcase 'head':\r\n\t\t\t\tcase 'options':\r\n\t\t\t\t\tif (hasBinaryData(data)) {\r\n\t\t\t\t\t\taddMultipartData(this.request, data)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.request.send(data)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'delete':\r\n\t\t\t\t\tthrow new Error(`\"data\" supplied for HTTP DELETE request: ${JSON.stringify(data)}`)\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Unknown HTTP method: ${method}`)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply HTTP headers\r\n\t\tthis.request.set(headers)\r\n\r\n\t\t// `true`/`false`\r\n\t\tthis.shouldParseJsonDates = shouldParseJsonDates\r\n\r\n\t\t// Can be used for examining HTTP response headers\r\n\t\t// (e.g. Amazon S3 file upload)\r\n\t\tthis.onResponseHeaders = onResponseHeaders\r\n\t}\r\n\r\n\t// Sets `Authorization: Bearer ${token}` in HTTP request header\r\n\taddAuthenticationToken(authTokenHeader, authentication, getAuthToken, getCookie, url, originalUrl) {\r\n\t\tlet token\r\n\t\tif (typeof authentication === 'string') {\r\n\t\t\ttoken = authentication\r\n\t\t} else if (getAuthToken) {\r\n\t\t\ttoken = getAuthToken(getCookie, {\r\n\t\t\t\turl,\r\n\t\t\t\toriginalUrl\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (token && authentication !== false) {\r\n\t\t\tthis.request.set(authTokenHeader || 'Authorization', `Bearer ${token}`)\r\n\t\t}\r\n\t}\r\n\r\n\t// Server side only\r\n\t// (copies user authentication cookies to retain session specific data)\r\n\taddCookies(cookies, cookiesToAdd) {\r\n\t\t// Merge the initial HTTP request `cookies` and `cookiesToAdd` (a `Set`)\r\n\t\tif (cookiesToAdd.size > 0) {\r\n\t\t\tcookies = { ...cookies }\r\n\t\t\tfor (const cookieRaw of cookiesToAdd) {\r\n\t\t\t\tconst [key, value] = getCookieKeyAndValue(cookieRaw)\r\n\t\t\t\tcookies[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Object.keys(cookies).length > 0) {\r\n\t\t\tthis.request.set('cookie', Object.keys(cookies).map(key => `${key}=${cookies[key]}`).join(';'))\r\n\t\t}\r\n\t}\r\n\r\n\t// File upload progress metering\r\n\t// https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\r\n\tprogress(progress) {\r\n\t\tthis.request.on('progress', function(event) {\r\n\t\t\tif (event.direction !== 'upload') {\r\n\t\t\t\t// Only interested in file upload progress metering\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (!event.lengthComputable) {\r\n\t\t\t\t// Unable to compute progress information since the total size is unknown\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tprogress(event.percent, event)\r\n\t\t})\r\n\t}\r\n\r\n\tsend() {\r\n\t\treturn this.request.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (this.onResponseHeaders) {\r\n\t\t\t\t\tthis.onResponseHeaders(response.headers)\r\n\t\t\t\t}\r\n\t\t\t\t// (on the server)\r\n\t\t\t\t// If any cookies were set then track them (for later).\r\n\t\t\t\t// `response.headers['set-cookie']` is an array of `String`s.\r\n\t\t\t\tif (response.headers['set-cookie']) {\r\n\t\t\t\t\tthis.onAddCookies(response.headers['set-cookie'])\r\n\t\t\t\t}\r\n\t\t\t\t// If HTTP response status is \"204 - No content\"\r\n\t\t\t\t// (PUT, DELETE) then resolve with an empty result.\r\n\t\t\t\tif (response.statusCode !== 204) {\r\n\t\t\t\t\treturn this.getResponseData(response)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\t// Infer additional `error` properties from the HTTP response.\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\tthis.populateErrorDataFromResponse(error, error.response)\r\n\t\t\t\t}\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tpopulateErrorDataFromResponse(error, response) {\r\n\t\tconst responseData = this.getResponseData(response)\r\n\r\n\t\t// Set `error.status` to HTTP response status code\r\n\t\terror.status = response.statusCode\r\n\r\n\t\tswitch (response.type) {\r\n\t\t\t// Set error `data` from response body,\r\n\t\t\tcase 'application/json':\r\n\t\t\t// http://jsonapi.org/\r\n\t\t\tcase 'application/vnd.api+json':\r\n\t\t\t\terror.data = responseData\r\n\t\t\t\t// Set the more meaningful message for the error (if available)\r\n\t\t\t\tif (error.data.message) {\r\n\t\t\t\t\terror.message = error.data.message\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\r\n\t\t\t// If the HTTP response was not a JSON object,\r\n\t\t\t// but rather a text or an HTML page,\r\n\t\t\t// then include that information in the `error`\r\n\t\t\t// for future reference (e.g. easier debugging).\r\n\r\n\t\t\tcase 'text/plain':\r\n\t\t\t\terror.message = responseData\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'text/html':\r\n\t\t\t\terror.html = responseData\r\n\t\t\t\t// Recover the original error message (if any)\r\n\t\t\t\tif (response.headers['x-error-message']) {\r\n\t\t\t\t\terror.message = response.headers['x-error-message']\r\n\t\t\t\t}\r\n\t\t\t\t// Recover the original error stack trace (if any)\r\n\t\t\t\tif (response.headers['x-error-stack-trace']) {\r\n\t\t\t\t\terror.stack = JSON.parse(response.headers['x-error-stack-trace'])\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tgetResponseData(response) {\r\n\t\tswitch (response.type) {\r\n\t\t\tcase 'application/json':\r\n\t\t\t// http://jsonapi.org/\r\n\t\t\tcase 'application/vnd.api+json':\r\n\t\t\t\tif (this.shouldParseJsonDates) {\r\n\t\t\t\t\treturn parseDates(response.body)\r\n\t\t\t\t}\r\n\t\t\t\treturn response.body\r\n\r\n\t\t\t// case 'text/plain':\r\n\t\t\t// case 'text/html':\r\n\t\t\tdefault:\r\n\t\t\t\treturn response.text\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Returns `[key, value]` from a raw cookie string\r\nexport function getCookieKeyAndValue(cookieRaw) {\r\n\tconst semicolonIndex = cookieRaw.indexOf(';')\r\n\tif (semicolonIndex >= 0) {\r\n\t\tcookieRaw = cookieRaw.slice(0, semicolonIndex)\r\n\t}\r\n\treturn cookieRaw.trim().split('=')\r\n}\r\n\r\nfunction addMultipartData(request, data) {\r\n\tfor (const key of Object.keys(data)) {\r\n\t\tlet parameter = data[key]\r\n\t\t// For an `<input type=\"file\"/>` DOM element just take its `.files`\r\n\t\tif (typeof HTMLInputElement !== 'undefined' && parameter instanceof HTMLInputElement) {\r\n\t\t\tparameter = parameter.files\r\n\t\t}\r\n\t\t// For a `FileList` parameter (e.g. `multiple` file upload),\r\n\t\t// iterate the `File`s in the `FileList`\r\n\t\t// and add them to the form data as a `[File]` array.\r\n\t\tif (typeof FileList !== 'undefined' && parameter instanceof FileList) {\r\n\t\t\tlet i = 0\r\n\t\t\twhile (i < parameter.length) {\r\n\t\t\t\trequest.attach(key, parameter[i])\r\n\t\t\t\ti++\r\n\t\t\t}\r\n\t\t} else if (typeof File !== 'undefined' && parameter instanceof File) {\r\n\t\t\trequest.attach(key, parameter)\r\n\t\t} else {\r\n\t\t\trequest.field(key, parameter)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hasBinaryData(data) {\r\n\tif (!isObject(data)) {\r\n\t\treturn false\r\n\t}\r\n\tfor (const key of Object.keys(data)) {\r\n\t\tconst parameter = data[key]\r\n\t\tif (typeof HTMLInputElement !== 'undefined' && parameter instanceof HTMLInputElement) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (typeof FileList !== 'undefined' && parameter instanceof FileList) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// `File` is a subclass of `Blob`\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Blob\r\n\t\tif (typeof Blob !== 'undefined' && parameter instanceof Blob) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n}"],"file":"HttpRequest.js"}